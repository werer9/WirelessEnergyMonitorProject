
EE209.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000008  00800100  000007fc  00000870  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000007fc  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  00000878  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000008d4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000080  00000000  00000000  00000914  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000a0f  00000000  00000000  00000994  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000007ff  00000000  00000000  000013a3  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000484  00000000  00000000  00001ba2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000cc  00000000  00000000  00002028  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003ea  00000000  00000000  000020f4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000001a4  00000000  00000000  000024de  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000050  00000000  00000000  00002682  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ec ef       	ldi	r30, 0xFC	; 252
  7c:	f7 e0       	ldi	r31, 0x07	; 7
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a8 30       	cpi	r26, 0x08	; 8
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>
  8a:	0e 94 af 00 	call	0x15e	; 0x15e <main>
  8e:	0c 94 fc 03 	jmp	0x7f8	; 0x7f8 <_exit>

00000092 <__bad_interrupt>:
  92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <read_adc_mv>:
#include "adc.h"


uint16_t read_adc_mv(uint8_t channel)
{
	ADMUX &= 0xF0;
  96:	ec e7       	ldi	r30, 0x7C	; 124
  98:	f0 e0       	ldi	r31, 0x00	; 0
  9a:	90 81       	ld	r25, Z
  9c:	90 7f       	andi	r25, 0xF0	; 240
  9e:	90 83       	st	Z, r25
	ADMUX |= channel;
  a0:	90 81       	ld	r25, Z
  a2:	89 2b       	or	r24, r25
  a4:	80 83       	st	Z, r24
	ADCSRA |= (1<<ADSC);
  a6:	ea e7       	ldi	r30, 0x7A	; 122
  a8:	f0 e0       	ldi	r31, 0x00	; 0
  aa:	80 81       	ld	r24, Z
  ac:	80 64       	ori	r24, 0x40	; 64
  ae:	80 83       	st	Z, r24
	while (ADCSRA & (1<<ADSC));
  b0:	80 81       	ld	r24, Z
  b2:	86 fd       	sbrc	r24, 6
  b4:	fd cf       	rjmp	.-6      	; 0xb0 <read_adc_mv+0x1a>
	uint16_t adc_output = ADCW;
  b6:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
  ba:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
	uint32_t mv = (uint32_t)adc_output * ((uint32_t)5000/1023);
	return (uint16_t)mv;
  be:	a0 e0       	ldi	r26, 0x00	; 0
  c0:	b0 e0       	ldi	r27, 0x00	; 0
  c2:	88 0f       	add	r24, r24
  c4:	99 1f       	adc	r25, r25
  c6:	aa 1f       	adc	r26, r26
  c8:	bb 1f       	adc	r27, r27
  ca:	88 0f       	add	r24, r24
  cc:	99 1f       	adc	r25, r25
  ce:	aa 1f       	adc	r26, r26
  d0:	bb 1f       	adc	r27, r27
}
  d2:	08 95       	ret

000000d4 <adc_init>:

void adc_init() 
{
	ADMUX |= (1<<REFS0);
  d4:	ec e7       	ldi	r30, 0x7C	; 124
  d6:	f0 e0       	ldi	r31, 0x00	; 0
  d8:	80 81       	ld	r24, Z
  da:	80 64       	ori	r24, 0x40	; 64
  dc:	80 83       	st	Z, r24
	ADMUX &= ~(1<<REFS1);
  de:	80 81       	ld	r24, Z
  e0:	8f 77       	andi	r24, 0x7F	; 127
  e2:	80 83       	st	Z, r24
	ADMUX &= ~(1<<MUX3) & ~(1 << MUX2) & ~(1<<MUX1) & ~(1<<MUX0);
  e4:	80 81       	ld	r24, Z
  e6:	80 7f       	andi	r24, 0xF0	; 240
  e8:	80 83       	st	Z, r24
	ADCSRA |= (1<<ADEN) | (1<<ADPS0) | (1<<ADPS1) | (1<<ADPS2) | (1<<ADSC);
  ea:	ea e7       	ldi	r30, 0x7A	; 122
  ec:	f0 e0       	ldi	r31, 0x00	; 0
  ee:	80 81       	ld	r24, Z
  f0:	87 6c       	ori	r24, 0xC7	; 199
  f2:	80 83       	st	Z, r24
  f4:	08 95       	ret

000000f6 <uart_init>:
 */ 
#include "uart.h"

// uart init function
void uart_init(uint16_t ubrr)
{
  f6:	9c 01       	movw	r18, r24
	// Enable TX and RX
	UCSR0B |= (1<<RXEN0) | (1<<TXEN0);
  f8:	e1 ec       	ldi	r30, 0xC1	; 193
  fa:	f0 e0       	ldi	r31, 0x00	; 0
  fc:	90 81       	ld	r25, Z
  fe:	98 61       	ori	r25, 0x18	; 24
 100:	90 83       	st	Z, r25
	// set character size to 8-bit
	UCSR0C |= (1<<UCSZ01) | (1<<UCSZ00);
 102:	e2 ec       	ldi	r30, 0xC2	; 194
 104:	f0 e0       	ldi	r31, 0x00	; 0
 106:	90 81       	ld	r25, Z
 108:	96 60       	ori	r25, 0x06	; 6
 10a:	90 83       	st	Z, r25
	UCSR0C &= ~(1<<UPM00);
 10c:	90 81       	ld	r25, Z
 10e:	9f 7e       	andi	r25, 0xEF	; 239
 110:	90 83       	st	Z, r25
	UCSR0C &= ~(1<<UPM01);
 112:	90 81       	ld	r25, Z
 114:	9f 7d       	andi	r25, 0xDF	; 223
 116:	90 83       	st	Z, r25
	// Set the baud rate
	UBRR0 = ubrr;
 118:	30 93 c5 00 	sts	0x00C5, r19	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
 11c:	20 93 c4 00 	sts	0x00C4, r18	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
 120:	08 95       	ret

00000122 <uart_transmit>:

// uart transmit function
void uart_transmit(uint8_t data)
{
	// wait until transmitter is ready
	while ((1<<UDRE0 & UCSR0A) == 0x00) {;} // do nothing
 122:	e0 ec       	ldi	r30, 0xC0	; 192
 124:	f0 e0       	ldi	r31, 0x00	; 0
 126:	90 81       	ld	r25, Z
 128:	95 ff       	sbrs	r25, 5
 12a:	fd cf       	rjmp	.-6      	; 0x126 <uart_transmit+0x4>
	// transmit data
	UDR0 = data;
 12c:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 130:	08 95       	ret

00000132 <uart_write>:
}

// uart write function
// write multiple characters at once
void uart_write(char *data) 
{
 132:	cf 93       	push	r28
 134:	df 93       	push	r29
 136:	ec 01       	movw	r28, r24
	int i = 0;
	while (data[i] != '\0') {
 138:	88 81       	ld	r24, Y
 13a:	88 23       	and	r24, r24
 13c:	31 f0       	breq	.+12     	; 0x14a <uart_write+0x18>
 13e:	21 96       	adiw	r28, 0x01	; 1
		uart_transmit(data[i]);
 140:	0e 94 91 00 	call	0x122	; 0x122 <uart_transmit>
// uart write function
// write multiple characters at once
void uart_write(char *data) 
{
	int i = 0;
	while (data[i] != '\0') {
 144:	89 91       	ld	r24, Y+
 146:	81 11       	cpse	r24, r1
 148:	fb cf       	rjmp	.-10     	; 0x140 <uart_write+0xe>
		uart_transmit(data[i]);
		i++;
	}
}
 14a:	df 91       	pop	r29
 14c:	cf 91       	pop	r28
 14e:	08 95       	ret

00000150 <uart_write_line>:

// uart write line function
// write multiple characters at once on one line
void uart_write_line(char *data)
{
	uart_write(data);
 150:	0e 94 99 00 	call	0x132	; 0x132 <uart_write>
	uart_write("\r\n");
 154:	80 e0       	ldi	r24, 0x00	; 0
 156:	91 e0       	ldi	r25, 0x01	; 1
 158:	0e 94 99 00 	call	0x132	; 0x132 <uart_write>
 15c:	08 95       	ret

0000015e <main>:
#include <util/delay.h>
#include <stdio.h>


int main(void)
{
 15e:	cf 93       	push	r28
 160:	df 93       	push	r29
 162:	cd b7       	in	r28, 0x3d	; 61
 164:	de b7       	in	r29, 0x3e	; 62
 166:	cf 5f       	subi	r28, 0xFF	; 255
 168:	d1 09       	sbc	r29, r1
 16a:	0f b6       	in	r0, 0x3f	; 63
 16c:	f8 94       	cli
 16e:	de bf       	out	0x3e, r29	; 62
 170:	0f be       	out	0x3f, r0	; 63
 172:	cd bf       	out	0x3d, r28	; 61
    uart_init(UBBR_SETTING);
 174:	87 e6       	ldi	r24, 0x67	; 103
 176:	90 e0       	ldi	r25, 0x00	; 0
 178:	0e 94 7b 00 	call	0xf6	; 0xf6 <uart_init>
	adc_init();
 17c:	0e 94 6a 00 	call	0xd4	; 0xd4 <adc_init>
	DDRC |= 0xFF;
 180:	87 b1       	in	r24, 0x07	; 7
 182:	8f ef       	ldi	r24, 0xFF	; 255
 184:	87 b9       	out	0x07, r24	; 7
	DDRC &= ~(1<<PC0) & ~(1<<PC1);
 186:	87 b1       	in	r24, 0x07	; 7
 188:	8c 7f       	andi	r24, 0xFC	; 252
 18a:	87 b9       	out	0x07, r24	; 7
	uint16_t data = 0;
	char output[255] = "";
 18c:	1a 82       	std	Y+2, r1	; 0x02
 18e:	19 82       	std	Y+1, r1	; 0x01
 190:	fe 01       	movw	r30, r28
 192:	33 96       	adiw	r30, 0x03	; 3
 194:	8d ef       	ldi	r24, 0xFD	; 253
 196:	df 01       	movw	r26, r30
 198:	1d 92       	st	X+, r1
 19a:	8a 95       	dec	r24
 19c:	e9 f7       	brne	.-6      	; 0x198 <main+0x3a>
    while (1) 
    {
		data = read_adc_mv(0);
		snprintf(output, 255, "%u", data);
 19e:	0f 2e       	mov	r0, r31
 1a0:	f3 e0       	ldi	r31, 0x03	; 3
 1a2:	ef 2e       	mov	r14, r31
 1a4:	f1 e0       	ldi	r31, 0x01	; 1
 1a6:	ff 2e       	mov	r15, r31
 1a8:	f0 2d       	mov	r31, r0
 1aa:	dd 24       	eor	r13, r13
 1ac:	da 94       	dec	r13
 1ae:	8e 01       	movw	r16, r28
 1b0:	0f 5f       	subi	r16, 0xFF	; 255
 1b2:	1f 4f       	sbci	r17, 0xFF	; 255
	DDRC &= ~(1<<PC0) & ~(1<<PC1);
	uint16_t data = 0;
	char output[255] = "";
    while (1) 
    {
		data = read_adc_mv(0);
 1b4:	80 e0       	ldi	r24, 0x00	; 0
 1b6:	0e 94 4b 00 	call	0x96	; 0x96 <read_adc_mv>
		snprintf(output, 255, "%u", data);
 1ba:	9f 93       	push	r25
 1bc:	8f 93       	push	r24
 1be:	ff 92       	push	r15
 1c0:	ef 92       	push	r14
 1c2:	1f 92       	push	r1
 1c4:	df 92       	push	r13
 1c6:	1f 93       	push	r17
 1c8:	0f 93       	push	r16
 1ca:	0e 94 04 01 	call	0x208	; 0x208 <snprintf>
		uart_write(output);
 1ce:	c8 01       	movw	r24, r16
 1d0:	0e 94 99 00 	call	0x132	; 0x132 <uart_write>
		uart_write(" ");
 1d4:	86 e0       	ldi	r24, 0x06	; 6
 1d6:	91 e0       	ldi	r25, 0x01	; 1
 1d8:	0e 94 99 00 	call	0x132	; 0x132 <uart_write>
		data = read_adc_mv(1);
 1dc:	81 e0       	ldi	r24, 0x01	; 1
 1de:	0e 94 4b 00 	call	0x96	; 0x96 <read_adc_mv>
		snprintf(output, 255, "%u", data);
 1e2:	9f 93       	push	r25
 1e4:	8f 93       	push	r24
 1e6:	ff 92       	push	r15
 1e8:	ef 92       	push	r14
 1ea:	1f 92       	push	r1
 1ec:	df 92       	push	r13
 1ee:	1f 93       	push	r17
 1f0:	0f 93       	push	r16
 1f2:	0e 94 04 01 	call	0x208	; 0x208 <snprintf>
		uart_write_line(output);
 1f6:	c8 01       	movw	r24, r16
 1f8:	0e 94 a8 00 	call	0x150	; 0x150 <uart_write_line>
 1fc:	0f b6       	in	r0, 0x3f	; 63
 1fe:	f8 94       	cli
 200:	de bf       	out	0x3e, r29	; 62
 202:	0f be       	out	0x3f, r0	; 63
 204:	cd bf       	out	0x3d, r28	; 61
 206:	d6 cf       	rjmp	.-84     	; 0x1b4 <main+0x56>

00000208 <snprintf>:
 208:	ae e0       	ldi	r26, 0x0E	; 14
 20a:	b0 e0       	ldi	r27, 0x00	; 0
 20c:	ea e0       	ldi	r30, 0x0A	; 10
 20e:	f1 e0       	ldi	r31, 0x01	; 1
 210:	0c 94 d3 03 	jmp	0x7a6	; 0x7a6 <__prologue_saves__+0x1c>
 214:	0d 89       	ldd	r16, Y+21	; 0x15
 216:	1e 89       	ldd	r17, Y+22	; 0x16
 218:	8f 89       	ldd	r24, Y+23	; 0x17
 21a:	98 8d       	ldd	r25, Y+24	; 0x18
 21c:	26 e0       	ldi	r18, 0x06	; 6
 21e:	2c 83       	std	Y+4, r18	; 0x04
 220:	1a 83       	std	Y+2, r17	; 0x02
 222:	09 83       	std	Y+1, r16	; 0x01
 224:	97 ff       	sbrs	r25, 7
 226:	02 c0       	rjmp	.+4      	; 0x22c <snprintf+0x24>
 228:	80 e0       	ldi	r24, 0x00	; 0
 22a:	90 e8       	ldi	r25, 0x80	; 128
 22c:	01 97       	sbiw	r24, 0x01	; 1
 22e:	9e 83       	std	Y+6, r25	; 0x06
 230:	8d 83       	std	Y+5, r24	; 0x05
 232:	ae 01       	movw	r20, r28
 234:	45 5e       	subi	r20, 0xE5	; 229
 236:	5f 4f       	sbci	r21, 0xFF	; 255
 238:	69 8d       	ldd	r22, Y+25	; 0x19
 23a:	7a 8d       	ldd	r23, Y+26	; 0x1a
 23c:	ce 01       	movw	r24, r28
 23e:	01 96       	adiw	r24, 0x01	; 1
 240:	0e 94 34 01 	call	0x268	; 0x268 <vfprintf>
 244:	4d 81       	ldd	r20, Y+5	; 0x05
 246:	5e 81       	ldd	r21, Y+6	; 0x06
 248:	57 fd       	sbrc	r21, 7
 24a:	0a c0       	rjmp	.+20     	; 0x260 <snprintf+0x58>
 24c:	2f 81       	ldd	r18, Y+7	; 0x07
 24e:	38 85       	ldd	r19, Y+8	; 0x08
 250:	42 17       	cp	r20, r18
 252:	53 07       	cpc	r21, r19
 254:	0c f4       	brge	.+2      	; 0x258 <snprintf+0x50>
 256:	9a 01       	movw	r18, r20
 258:	f8 01       	movw	r30, r16
 25a:	e2 0f       	add	r30, r18
 25c:	f3 1f       	adc	r31, r19
 25e:	10 82       	st	Z, r1
 260:	2e 96       	adiw	r28, 0x0e	; 14
 262:	e4 e0       	ldi	r30, 0x04	; 4
 264:	0c 94 ef 03 	jmp	0x7de	; 0x7de <__epilogue_restores__+0x1c>

00000268 <vfprintf>:
 268:	ab e0       	ldi	r26, 0x0B	; 11
 26a:	b0 e0       	ldi	r27, 0x00	; 0
 26c:	ea e3       	ldi	r30, 0x3A	; 58
 26e:	f1 e0       	ldi	r31, 0x01	; 1
 270:	0c 94 c5 03 	jmp	0x78a	; 0x78a <__prologue_saves__>
 274:	6c 01       	movw	r12, r24
 276:	7b 01       	movw	r14, r22
 278:	8a 01       	movw	r16, r20
 27a:	fc 01       	movw	r30, r24
 27c:	17 82       	std	Z+7, r1	; 0x07
 27e:	16 82       	std	Z+6, r1	; 0x06
 280:	83 81       	ldd	r24, Z+3	; 0x03
 282:	81 ff       	sbrs	r24, 1
 284:	cc c1       	rjmp	.+920    	; 0x61e <__LOCK_REGION_LENGTH__+0x21e>
 286:	ce 01       	movw	r24, r28
 288:	01 96       	adiw	r24, 0x01	; 1
 28a:	3c 01       	movw	r6, r24
 28c:	f6 01       	movw	r30, r12
 28e:	93 81       	ldd	r25, Z+3	; 0x03
 290:	f7 01       	movw	r30, r14
 292:	93 fd       	sbrc	r25, 3
 294:	85 91       	lpm	r24, Z+
 296:	93 ff       	sbrs	r25, 3
 298:	81 91       	ld	r24, Z+
 29a:	7f 01       	movw	r14, r30
 29c:	88 23       	and	r24, r24
 29e:	09 f4       	brne	.+2      	; 0x2a2 <vfprintf+0x3a>
 2a0:	ba c1       	rjmp	.+884    	; 0x616 <__LOCK_REGION_LENGTH__+0x216>
 2a2:	85 32       	cpi	r24, 0x25	; 37
 2a4:	39 f4       	brne	.+14     	; 0x2b4 <vfprintf+0x4c>
 2a6:	93 fd       	sbrc	r25, 3
 2a8:	85 91       	lpm	r24, Z+
 2aa:	93 ff       	sbrs	r25, 3
 2ac:	81 91       	ld	r24, Z+
 2ae:	7f 01       	movw	r14, r30
 2b0:	85 32       	cpi	r24, 0x25	; 37
 2b2:	29 f4       	brne	.+10     	; 0x2be <vfprintf+0x56>
 2b4:	b6 01       	movw	r22, r12
 2b6:	90 e0       	ldi	r25, 0x00	; 0
 2b8:	0e 94 2b 03 	call	0x656	; 0x656 <fputc>
 2bc:	e7 cf       	rjmp	.-50     	; 0x28c <vfprintf+0x24>
 2be:	91 2c       	mov	r9, r1
 2c0:	21 2c       	mov	r2, r1
 2c2:	31 2c       	mov	r3, r1
 2c4:	ff e1       	ldi	r31, 0x1F	; 31
 2c6:	f3 15       	cp	r31, r3
 2c8:	d8 f0       	brcs	.+54     	; 0x300 <vfprintf+0x98>
 2ca:	8b 32       	cpi	r24, 0x2B	; 43
 2cc:	79 f0       	breq	.+30     	; 0x2ec <vfprintf+0x84>
 2ce:	38 f4       	brcc	.+14     	; 0x2de <vfprintf+0x76>
 2d0:	80 32       	cpi	r24, 0x20	; 32
 2d2:	79 f0       	breq	.+30     	; 0x2f2 <vfprintf+0x8a>
 2d4:	83 32       	cpi	r24, 0x23	; 35
 2d6:	a1 f4       	brne	.+40     	; 0x300 <vfprintf+0x98>
 2d8:	23 2d       	mov	r18, r3
 2da:	20 61       	ori	r18, 0x10	; 16
 2dc:	1d c0       	rjmp	.+58     	; 0x318 <vfprintf+0xb0>
 2de:	8d 32       	cpi	r24, 0x2D	; 45
 2e0:	61 f0       	breq	.+24     	; 0x2fa <vfprintf+0x92>
 2e2:	80 33       	cpi	r24, 0x30	; 48
 2e4:	69 f4       	brne	.+26     	; 0x300 <vfprintf+0x98>
 2e6:	23 2d       	mov	r18, r3
 2e8:	21 60       	ori	r18, 0x01	; 1
 2ea:	16 c0       	rjmp	.+44     	; 0x318 <vfprintf+0xb0>
 2ec:	83 2d       	mov	r24, r3
 2ee:	82 60       	ori	r24, 0x02	; 2
 2f0:	38 2e       	mov	r3, r24
 2f2:	e3 2d       	mov	r30, r3
 2f4:	e4 60       	ori	r30, 0x04	; 4
 2f6:	3e 2e       	mov	r3, r30
 2f8:	2a c0       	rjmp	.+84     	; 0x34e <vfprintf+0xe6>
 2fa:	f3 2d       	mov	r31, r3
 2fc:	f8 60       	ori	r31, 0x08	; 8
 2fe:	1d c0       	rjmp	.+58     	; 0x33a <vfprintf+0xd2>
 300:	37 fc       	sbrc	r3, 7
 302:	2d c0       	rjmp	.+90     	; 0x35e <vfprintf+0xf6>
 304:	20 ed       	ldi	r18, 0xD0	; 208
 306:	28 0f       	add	r18, r24
 308:	2a 30       	cpi	r18, 0x0A	; 10
 30a:	40 f0       	brcs	.+16     	; 0x31c <vfprintf+0xb4>
 30c:	8e 32       	cpi	r24, 0x2E	; 46
 30e:	b9 f4       	brne	.+46     	; 0x33e <vfprintf+0xd6>
 310:	36 fc       	sbrc	r3, 6
 312:	81 c1       	rjmp	.+770    	; 0x616 <__LOCK_REGION_LENGTH__+0x216>
 314:	23 2d       	mov	r18, r3
 316:	20 64       	ori	r18, 0x40	; 64
 318:	32 2e       	mov	r3, r18
 31a:	19 c0       	rjmp	.+50     	; 0x34e <vfprintf+0xe6>
 31c:	36 fe       	sbrs	r3, 6
 31e:	06 c0       	rjmp	.+12     	; 0x32c <vfprintf+0xc4>
 320:	8a e0       	ldi	r24, 0x0A	; 10
 322:	98 9e       	mul	r9, r24
 324:	20 0d       	add	r18, r0
 326:	11 24       	eor	r1, r1
 328:	92 2e       	mov	r9, r18
 32a:	11 c0       	rjmp	.+34     	; 0x34e <vfprintf+0xe6>
 32c:	ea e0       	ldi	r30, 0x0A	; 10
 32e:	2e 9e       	mul	r2, r30
 330:	20 0d       	add	r18, r0
 332:	11 24       	eor	r1, r1
 334:	22 2e       	mov	r2, r18
 336:	f3 2d       	mov	r31, r3
 338:	f0 62       	ori	r31, 0x20	; 32
 33a:	3f 2e       	mov	r3, r31
 33c:	08 c0       	rjmp	.+16     	; 0x34e <vfprintf+0xe6>
 33e:	8c 36       	cpi	r24, 0x6C	; 108
 340:	21 f4       	brne	.+8      	; 0x34a <vfprintf+0xe2>
 342:	83 2d       	mov	r24, r3
 344:	80 68       	ori	r24, 0x80	; 128
 346:	38 2e       	mov	r3, r24
 348:	02 c0       	rjmp	.+4      	; 0x34e <vfprintf+0xe6>
 34a:	88 36       	cpi	r24, 0x68	; 104
 34c:	41 f4       	brne	.+16     	; 0x35e <vfprintf+0xf6>
 34e:	f7 01       	movw	r30, r14
 350:	93 fd       	sbrc	r25, 3
 352:	85 91       	lpm	r24, Z+
 354:	93 ff       	sbrs	r25, 3
 356:	81 91       	ld	r24, Z+
 358:	7f 01       	movw	r14, r30
 35a:	81 11       	cpse	r24, r1
 35c:	b3 cf       	rjmp	.-154    	; 0x2c4 <vfprintf+0x5c>
 35e:	98 2f       	mov	r25, r24
 360:	9f 7d       	andi	r25, 0xDF	; 223
 362:	95 54       	subi	r25, 0x45	; 69
 364:	93 30       	cpi	r25, 0x03	; 3
 366:	28 f4       	brcc	.+10     	; 0x372 <vfprintf+0x10a>
 368:	0c 5f       	subi	r16, 0xFC	; 252
 36a:	1f 4f       	sbci	r17, 0xFF	; 255
 36c:	9f e3       	ldi	r25, 0x3F	; 63
 36e:	99 83       	std	Y+1, r25	; 0x01
 370:	0d c0       	rjmp	.+26     	; 0x38c <vfprintf+0x124>
 372:	83 36       	cpi	r24, 0x63	; 99
 374:	31 f0       	breq	.+12     	; 0x382 <vfprintf+0x11a>
 376:	83 37       	cpi	r24, 0x73	; 115
 378:	71 f0       	breq	.+28     	; 0x396 <vfprintf+0x12e>
 37a:	83 35       	cpi	r24, 0x53	; 83
 37c:	09 f0       	breq	.+2      	; 0x380 <vfprintf+0x118>
 37e:	59 c0       	rjmp	.+178    	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
 380:	21 c0       	rjmp	.+66     	; 0x3c4 <vfprintf+0x15c>
 382:	f8 01       	movw	r30, r16
 384:	80 81       	ld	r24, Z
 386:	89 83       	std	Y+1, r24	; 0x01
 388:	0e 5f       	subi	r16, 0xFE	; 254
 38a:	1f 4f       	sbci	r17, 0xFF	; 255
 38c:	88 24       	eor	r8, r8
 38e:	83 94       	inc	r8
 390:	91 2c       	mov	r9, r1
 392:	53 01       	movw	r10, r6
 394:	13 c0       	rjmp	.+38     	; 0x3bc <vfprintf+0x154>
 396:	28 01       	movw	r4, r16
 398:	f2 e0       	ldi	r31, 0x02	; 2
 39a:	4f 0e       	add	r4, r31
 39c:	51 1c       	adc	r5, r1
 39e:	f8 01       	movw	r30, r16
 3a0:	a0 80       	ld	r10, Z
 3a2:	b1 80       	ldd	r11, Z+1	; 0x01
 3a4:	36 fe       	sbrs	r3, 6
 3a6:	03 c0       	rjmp	.+6      	; 0x3ae <vfprintf+0x146>
 3a8:	69 2d       	mov	r22, r9
 3aa:	70 e0       	ldi	r23, 0x00	; 0
 3ac:	02 c0       	rjmp	.+4      	; 0x3b2 <vfprintf+0x14a>
 3ae:	6f ef       	ldi	r22, 0xFF	; 255
 3b0:	7f ef       	ldi	r23, 0xFF	; 255
 3b2:	c5 01       	movw	r24, r10
 3b4:	0e 94 20 03 	call	0x640	; 0x640 <strnlen>
 3b8:	4c 01       	movw	r8, r24
 3ba:	82 01       	movw	r16, r4
 3bc:	f3 2d       	mov	r31, r3
 3be:	ff 77       	andi	r31, 0x7F	; 127
 3c0:	3f 2e       	mov	r3, r31
 3c2:	16 c0       	rjmp	.+44     	; 0x3f0 <vfprintf+0x188>
 3c4:	28 01       	movw	r4, r16
 3c6:	22 e0       	ldi	r18, 0x02	; 2
 3c8:	42 0e       	add	r4, r18
 3ca:	51 1c       	adc	r5, r1
 3cc:	f8 01       	movw	r30, r16
 3ce:	a0 80       	ld	r10, Z
 3d0:	b1 80       	ldd	r11, Z+1	; 0x01
 3d2:	36 fe       	sbrs	r3, 6
 3d4:	03 c0       	rjmp	.+6      	; 0x3dc <vfprintf+0x174>
 3d6:	69 2d       	mov	r22, r9
 3d8:	70 e0       	ldi	r23, 0x00	; 0
 3da:	02 c0       	rjmp	.+4      	; 0x3e0 <vfprintf+0x178>
 3dc:	6f ef       	ldi	r22, 0xFF	; 255
 3de:	7f ef       	ldi	r23, 0xFF	; 255
 3e0:	c5 01       	movw	r24, r10
 3e2:	0e 94 15 03 	call	0x62a	; 0x62a <strnlen_P>
 3e6:	4c 01       	movw	r8, r24
 3e8:	f3 2d       	mov	r31, r3
 3ea:	f0 68       	ori	r31, 0x80	; 128
 3ec:	3f 2e       	mov	r3, r31
 3ee:	82 01       	movw	r16, r4
 3f0:	33 fc       	sbrc	r3, 3
 3f2:	1b c0       	rjmp	.+54     	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 3f4:	82 2d       	mov	r24, r2
 3f6:	90 e0       	ldi	r25, 0x00	; 0
 3f8:	88 16       	cp	r8, r24
 3fa:	99 06       	cpc	r9, r25
 3fc:	b0 f4       	brcc	.+44     	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 3fe:	b6 01       	movw	r22, r12
 400:	80 e2       	ldi	r24, 0x20	; 32
 402:	90 e0       	ldi	r25, 0x00	; 0
 404:	0e 94 2b 03 	call	0x656	; 0x656 <fputc>
 408:	2a 94       	dec	r2
 40a:	f4 cf       	rjmp	.-24     	; 0x3f4 <vfprintf+0x18c>
 40c:	f5 01       	movw	r30, r10
 40e:	37 fc       	sbrc	r3, 7
 410:	85 91       	lpm	r24, Z+
 412:	37 fe       	sbrs	r3, 7
 414:	81 91       	ld	r24, Z+
 416:	5f 01       	movw	r10, r30
 418:	b6 01       	movw	r22, r12
 41a:	90 e0       	ldi	r25, 0x00	; 0
 41c:	0e 94 2b 03 	call	0x656	; 0x656 <fputc>
 420:	21 10       	cpse	r2, r1
 422:	2a 94       	dec	r2
 424:	21 e0       	ldi	r18, 0x01	; 1
 426:	82 1a       	sub	r8, r18
 428:	91 08       	sbc	r9, r1
 42a:	81 14       	cp	r8, r1
 42c:	91 04       	cpc	r9, r1
 42e:	71 f7       	brne	.-36     	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 430:	e8 c0       	rjmp	.+464    	; 0x602 <__LOCK_REGION_LENGTH__+0x202>
 432:	84 36       	cpi	r24, 0x64	; 100
 434:	11 f0       	breq	.+4      	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 436:	89 36       	cpi	r24, 0x69	; 105
 438:	41 f5       	brne	.+80     	; 0x48a <__LOCK_REGION_LENGTH__+0x8a>
 43a:	f8 01       	movw	r30, r16
 43c:	37 fe       	sbrs	r3, 7
 43e:	07 c0       	rjmp	.+14     	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
 440:	60 81       	ld	r22, Z
 442:	71 81       	ldd	r23, Z+1	; 0x01
 444:	82 81       	ldd	r24, Z+2	; 0x02
 446:	93 81       	ldd	r25, Z+3	; 0x03
 448:	0c 5f       	subi	r16, 0xFC	; 252
 44a:	1f 4f       	sbci	r17, 0xFF	; 255
 44c:	08 c0       	rjmp	.+16     	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 44e:	60 81       	ld	r22, Z
 450:	71 81       	ldd	r23, Z+1	; 0x01
 452:	07 2e       	mov	r0, r23
 454:	00 0c       	add	r0, r0
 456:	88 0b       	sbc	r24, r24
 458:	99 0b       	sbc	r25, r25
 45a:	0e 5f       	subi	r16, 0xFE	; 254
 45c:	1f 4f       	sbci	r17, 0xFF	; 255
 45e:	f3 2d       	mov	r31, r3
 460:	ff 76       	andi	r31, 0x6F	; 111
 462:	3f 2e       	mov	r3, r31
 464:	97 ff       	sbrs	r25, 7
 466:	09 c0       	rjmp	.+18     	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>
 468:	90 95       	com	r25
 46a:	80 95       	com	r24
 46c:	70 95       	com	r23
 46e:	61 95       	neg	r22
 470:	7f 4f       	sbci	r23, 0xFF	; 255
 472:	8f 4f       	sbci	r24, 0xFF	; 255
 474:	9f 4f       	sbci	r25, 0xFF	; 255
 476:	f0 68       	ori	r31, 0x80	; 128
 478:	3f 2e       	mov	r3, r31
 47a:	2a e0       	ldi	r18, 0x0A	; 10
 47c:	30 e0       	ldi	r19, 0x00	; 0
 47e:	a3 01       	movw	r20, r6
 480:	0e 94 67 03 	call	0x6ce	; 0x6ce <__ultoa_invert>
 484:	88 2e       	mov	r8, r24
 486:	86 18       	sub	r8, r6
 488:	45 c0       	rjmp	.+138    	; 0x514 <__LOCK_REGION_LENGTH__+0x114>
 48a:	85 37       	cpi	r24, 0x75	; 117
 48c:	31 f4       	brne	.+12     	; 0x49a <__LOCK_REGION_LENGTH__+0x9a>
 48e:	23 2d       	mov	r18, r3
 490:	2f 7e       	andi	r18, 0xEF	; 239
 492:	b2 2e       	mov	r11, r18
 494:	2a e0       	ldi	r18, 0x0A	; 10
 496:	30 e0       	ldi	r19, 0x00	; 0
 498:	25 c0       	rjmp	.+74     	; 0x4e4 <__LOCK_REGION_LENGTH__+0xe4>
 49a:	93 2d       	mov	r25, r3
 49c:	99 7f       	andi	r25, 0xF9	; 249
 49e:	b9 2e       	mov	r11, r25
 4a0:	8f 36       	cpi	r24, 0x6F	; 111
 4a2:	c1 f0       	breq	.+48     	; 0x4d4 <__LOCK_REGION_LENGTH__+0xd4>
 4a4:	18 f4       	brcc	.+6      	; 0x4ac <__LOCK_REGION_LENGTH__+0xac>
 4a6:	88 35       	cpi	r24, 0x58	; 88
 4a8:	79 f0       	breq	.+30     	; 0x4c8 <__LOCK_REGION_LENGTH__+0xc8>
 4aa:	b5 c0       	rjmp	.+362    	; 0x616 <__LOCK_REGION_LENGTH__+0x216>
 4ac:	80 37       	cpi	r24, 0x70	; 112
 4ae:	19 f0       	breq	.+6      	; 0x4b6 <__LOCK_REGION_LENGTH__+0xb6>
 4b0:	88 37       	cpi	r24, 0x78	; 120
 4b2:	21 f0       	breq	.+8      	; 0x4bc <__LOCK_REGION_LENGTH__+0xbc>
 4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__LOCK_REGION_LENGTH__+0x216>
 4b6:	e9 2f       	mov	r30, r25
 4b8:	e0 61       	ori	r30, 0x10	; 16
 4ba:	be 2e       	mov	r11, r30
 4bc:	b4 fe       	sbrs	r11, 4
 4be:	0d c0       	rjmp	.+26     	; 0x4da <__LOCK_REGION_LENGTH__+0xda>
 4c0:	fb 2d       	mov	r31, r11
 4c2:	f4 60       	ori	r31, 0x04	; 4
 4c4:	bf 2e       	mov	r11, r31
 4c6:	09 c0       	rjmp	.+18     	; 0x4da <__LOCK_REGION_LENGTH__+0xda>
 4c8:	34 fe       	sbrs	r3, 4
 4ca:	0a c0       	rjmp	.+20     	; 0x4e0 <__LOCK_REGION_LENGTH__+0xe0>
 4cc:	29 2f       	mov	r18, r25
 4ce:	26 60       	ori	r18, 0x06	; 6
 4d0:	b2 2e       	mov	r11, r18
 4d2:	06 c0       	rjmp	.+12     	; 0x4e0 <__LOCK_REGION_LENGTH__+0xe0>
 4d4:	28 e0       	ldi	r18, 0x08	; 8
 4d6:	30 e0       	ldi	r19, 0x00	; 0
 4d8:	05 c0       	rjmp	.+10     	; 0x4e4 <__LOCK_REGION_LENGTH__+0xe4>
 4da:	20 e1       	ldi	r18, 0x10	; 16
 4dc:	30 e0       	ldi	r19, 0x00	; 0
 4de:	02 c0       	rjmp	.+4      	; 0x4e4 <__LOCK_REGION_LENGTH__+0xe4>
 4e0:	20 e1       	ldi	r18, 0x10	; 16
 4e2:	32 e0       	ldi	r19, 0x02	; 2
 4e4:	f8 01       	movw	r30, r16
 4e6:	b7 fe       	sbrs	r11, 7
 4e8:	07 c0       	rjmp	.+14     	; 0x4f8 <__LOCK_REGION_LENGTH__+0xf8>
 4ea:	60 81       	ld	r22, Z
 4ec:	71 81       	ldd	r23, Z+1	; 0x01
 4ee:	82 81       	ldd	r24, Z+2	; 0x02
 4f0:	93 81       	ldd	r25, Z+3	; 0x03
 4f2:	0c 5f       	subi	r16, 0xFC	; 252
 4f4:	1f 4f       	sbci	r17, 0xFF	; 255
 4f6:	06 c0       	rjmp	.+12     	; 0x504 <__LOCK_REGION_LENGTH__+0x104>
 4f8:	60 81       	ld	r22, Z
 4fa:	71 81       	ldd	r23, Z+1	; 0x01
 4fc:	80 e0       	ldi	r24, 0x00	; 0
 4fe:	90 e0       	ldi	r25, 0x00	; 0
 500:	0e 5f       	subi	r16, 0xFE	; 254
 502:	1f 4f       	sbci	r17, 0xFF	; 255
 504:	a3 01       	movw	r20, r6
 506:	0e 94 67 03 	call	0x6ce	; 0x6ce <__ultoa_invert>
 50a:	88 2e       	mov	r8, r24
 50c:	86 18       	sub	r8, r6
 50e:	fb 2d       	mov	r31, r11
 510:	ff 77       	andi	r31, 0x7F	; 127
 512:	3f 2e       	mov	r3, r31
 514:	36 fe       	sbrs	r3, 6
 516:	0d c0       	rjmp	.+26     	; 0x532 <__LOCK_REGION_LENGTH__+0x132>
 518:	23 2d       	mov	r18, r3
 51a:	2e 7f       	andi	r18, 0xFE	; 254
 51c:	a2 2e       	mov	r10, r18
 51e:	89 14       	cp	r8, r9
 520:	58 f4       	brcc	.+22     	; 0x538 <__LOCK_REGION_LENGTH__+0x138>
 522:	34 fe       	sbrs	r3, 4
 524:	0b c0       	rjmp	.+22     	; 0x53c <__LOCK_REGION_LENGTH__+0x13c>
 526:	32 fc       	sbrc	r3, 2
 528:	09 c0       	rjmp	.+18     	; 0x53c <__LOCK_REGION_LENGTH__+0x13c>
 52a:	83 2d       	mov	r24, r3
 52c:	8e 7e       	andi	r24, 0xEE	; 238
 52e:	a8 2e       	mov	r10, r24
 530:	05 c0       	rjmp	.+10     	; 0x53c <__LOCK_REGION_LENGTH__+0x13c>
 532:	b8 2c       	mov	r11, r8
 534:	a3 2c       	mov	r10, r3
 536:	03 c0       	rjmp	.+6      	; 0x53e <__LOCK_REGION_LENGTH__+0x13e>
 538:	b8 2c       	mov	r11, r8
 53a:	01 c0       	rjmp	.+2      	; 0x53e <__LOCK_REGION_LENGTH__+0x13e>
 53c:	b9 2c       	mov	r11, r9
 53e:	a4 fe       	sbrs	r10, 4
 540:	0f c0       	rjmp	.+30     	; 0x560 <__LOCK_REGION_LENGTH__+0x160>
 542:	fe 01       	movw	r30, r28
 544:	e8 0d       	add	r30, r8
 546:	f1 1d       	adc	r31, r1
 548:	80 81       	ld	r24, Z
 54a:	80 33       	cpi	r24, 0x30	; 48
 54c:	21 f4       	brne	.+8      	; 0x556 <__LOCK_REGION_LENGTH__+0x156>
 54e:	9a 2d       	mov	r25, r10
 550:	99 7e       	andi	r25, 0xE9	; 233
 552:	a9 2e       	mov	r10, r25
 554:	09 c0       	rjmp	.+18     	; 0x568 <__LOCK_REGION_LENGTH__+0x168>
 556:	a2 fe       	sbrs	r10, 2
 558:	06 c0       	rjmp	.+12     	; 0x566 <__LOCK_REGION_LENGTH__+0x166>
 55a:	b3 94       	inc	r11
 55c:	b3 94       	inc	r11
 55e:	04 c0       	rjmp	.+8      	; 0x568 <__LOCK_REGION_LENGTH__+0x168>
 560:	8a 2d       	mov	r24, r10
 562:	86 78       	andi	r24, 0x86	; 134
 564:	09 f0       	breq	.+2      	; 0x568 <__LOCK_REGION_LENGTH__+0x168>
 566:	b3 94       	inc	r11
 568:	a3 fc       	sbrc	r10, 3
 56a:	11 c0       	rjmp	.+34     	; 0x58e <__LOCK_REGION_LENGTH__+0x18e>
 56c:	a0 fe       	sbrs	r10, 0
 56e:	06 c0       	rjmp	.+12     	; 0x57c <__LOCK_REGION_LENGTH__+0x17c>
 570:	b2 14       	cp	r11, r2
 572:	88 f4       	brcc	.+34     	; 0x596 <__LOCK_REGION_LENGTH__+0x196>
 574:	28 0c       	add	r2, r8
 576:	92 2c       	mov	r9, r2
 578:	9b 18       	sub	r9, r11
 57a:	0e c0       	rjmp	.+28     	; 0x598 <__LOCK_REGION_LENGTH__+0x198>
 57c:	b2 14       	cp	r11, r2
 57e:	60 f4       	brcc	.+24     	; 0x598 <__LOCK_REGION_LENGTH__+0x198>
 580:	b6 01       	movw	r22, r12
 582:	80 e2       	ldi	r24, 0x20	; 32
 584:	90 e0       	ldi	r25, 0x00	; 0
 586:	0e 94 2b 03 	call	0x656	; 0x656 <fputc>
 58a:	b3 94       	inc	r11
 58c:	f7 cf       	rjmp	.-18     	; 0x57c <__LOCK_REGION_LENGTH__+0x17c>
 58e:	b2 14       	cp	r11, r2
 590:	18 f4       	brcc	.+6      	; 0x598 <__LOCK_REGION_LENGTH__+0x198>
 592:	2b 18       	sub	r2, r11
 594:	02 c0       	rjmp	.+4      	; 0x59a <__LOCK_REGION_LENGTH__+0x19a>
 596:	98 2c       	mov	r9, r8
 598:	21 2c       	mov	r2, r1
 59a:	a4 fe       	sbrs	r10, 4
 59c:	10 c0       	rjmp	.+32     	; 0x5be <__LOCK_REGION_LENGTH__+0x1be>
 59e:	b6 01       	movw	r22, r12
 5a0:	80 e3       	ldi	r24, 0x30	; 48
 5a2:	90 e0       	ldi	r25, 0x00	; 0
 5a4:	0e 94 2b 03 	call	0x656	; 0x656 <fputc>
 5a8:	a2 fe       	sbrs	r10, 2
 5aa:	17 c0       	rjmp	.+46     	; 0x5da <__LOCK_REGION_LENGTH__+0x1da>
 5ac:	a1 fc       	sbrc	r10, 1
 5ae:	03 c0       	rjmp	.+6      	; 0x5b6 <__LOCK_REGION_LENGTH__+0x1b6>
 5b0:	88 e7       	ldi	r24, 0x78	; 120
 5b2:	90 e0       	ldi	r25, 0x00	; 0
 5b4:	02 c0       	rjmp	.+4      	; 0x5ba <__LOCK_REGION_LENGTH__+0x1ba>
 5b6:	88 e5       	ldi	r24, 0x58	; 88
 5b8:	90 e0       	ldi	r25, 0x00	; 0
 5ba:	b6 01       	movw	r22, r12
 5bc:	0c c0       	rjmp	.+24     	; 0x5d6 <__LOCK_REGION_LENGTH__+0x1d6>
 5be:	8a 2d       	mov	r24, r10
 5c0:	86 78       	andi	r24, 0x86	; 134
 5c2:	59 f0       	breq	.+22     	; 0x5da <__LOCK_REGION_LENGTH__+0x1da>
 5c4:	a1 fe       	sbrs	r10, 1
 5c6:	02 c0       	rjmp	.+4      	; 0x5cc <__LOCK_REGION_LENGTH__+0x1cc>
 5c8:	8b e2       	ldi	r24, 0x2B	; 43
 5ca:	01 c0       	rjmp	.+2      	; 0x5ce <__LOCK_REGION_LENGTH__+0x1ce>
 5cc:	80 e2       	ldi	r24, 0x20	; 32
 5ce:	a7 fc       	sbrc	r10, 7
 5d0:	8d e2       	ldi	r24, 0x2D	; 45
 5d2:	b6 01       	movw	r22, r12
 5d4:	90 e0       	ldi	r25, 0x00	; 0
 5d6:	0e 94 2b 03 	call	0x656	; 0x656 <fputc>
 5da:	89 14       	cp	r8, r9
 5dc:	38 f4       	brcc	.+14     	; 0x5ec <__LOCK_REGION_LENGTH__+0x1ec>
 5de:	b6 01       	movw	r22, r12
 5e0:	80 e3       	ldi	r24, 0x30	; 48
 5e2:	90 e0       	ldi	r25, 0x00	; 0
 5e4:	0e 94 2b 03 	call	0x656	; 0x656 <fputc>
 5e8:	9a 94       	dec	r9
 5ea:	f7 cf       	rjmp	.-18     	; 0x5da <__LOCK_REGION_LENGTH__+0x1da>
 5ec:	8a 94       	dec	r8
 5ee:	f3 01       	movw	r30, r6
 5f0:	e8 0d       	add	r30, r8
 5f2:	f1 1d       	adc	r31, r1
 5f4:	80 81       	ld	r24, Z
 5f6:	b6 01       	movw	r22, r12
 5f8:	90 e0       	ldi	r25, 0x00	; 0
 5fa:	0e 94 2b 03 	call	0x656	; 0x656 <fputc>
 5fe:	81 10       	cpse	r8, r1
 600:	f5 cf       	rjmp	.-22     	; 0x5ec <__LOCK_REGION_LENGTH__+0x1ec>
 602:	22 20       	and	r2, r2
 604:	09 f4       	brne	.+2      	; 0x608 <__LOCK_REGION_LENGTH__+0x208>
 606:	42 ce       	rjmp	.-892    	; 0x28c <vfprintf+0x24>
 608:	b6 01       	movw	r22, r12
 60a:	80 e2       	ldi	r24, 0x20	; 32
 60c:	90 e0       	ldi	r25, 0x00	; 0
 60e:	0e 94 2b 03 	call	0x656	; 0x656 <fputc>
 612:	2a 94       	dec	r2
 614:	f6 cf       	rjmp	.-20     	; 0x602 <__LOCK_REGION_LENGTH__+0x202>
 616:	f6 01       	movw	r30, r12
 618:	86 81       	ldd	r24, Z+6	; 0x06
 61a:	97 81       	ldd	r25, Z+7	; 0x07
 61c:	02 c0       	rjmp	.+4      	; 0x622 <__LOCK_REGION_LENGTH__+0x222>
 61e:	8f ef       	ldi	r24, 0xFF	; 255
 620:	9f ef       	ldi	r25, 0xFF	; 255
 622:	2b 96       	adiw	r28, 0x0b	; 11
 624:	e2 e1       	ldi	r30, 0x12	; 18
 626:	0c 94 e1 03 	jmp	0x7c2	; 0x7c2 <__epilogue_restores__>

0000062a <strnlen_P>:
 62a:	fc 01       	movw	r30, r24
 62c:	05 90       	lpm	r0, Z+
 62e:	61 50       	subi	r22, 0x01	; 1
 630:	70 40       	sbci	r23, 0x00	; 0
 632:	01 10       	cpse	r0, r1
 634:	d8 f7       	brcc	.-10     	; 0x62c <strnlen_P+0x2>
 636:	80 95       	com	r24
 638:	90 95       	com	r25
 63a:	8e 0f       	add	r24, r30
 63c:	9f 1f       	adc	r25, r31
 63e:	08 95       	ret

00000640 <strnlen>:
 640:	fc 01       	movw	r30, r24
 642:	61 50       	subi	r22, 0x01	; 1
 644:	70 40       	sbci	r23, 0x00	; 0
 646:	01 90       	ld	r0, Z+
 648:	01 10       	cpse	r0, r1
 64a:	d8 f7       	brcc	.-10     	; 0x642 <strnlen+0x2>
 64c:	80 95       	com	r24
 64e:	90 95       	com	r25
 650:	8e 0f       	add	r24, r30
 652:	9f 1f       	adc	r25, r31
 654:	08 95       	ret

00000656 <fputc>:
 656:	0f 93       	push	r16
 658:	1f 93       	push	r17
 65a:	cf 93       	push	r28
 65c:	df 93       	push	r29
 65e:	fb 01       	movw	r30, r22
 660:	23 81       	ldd	r18, Z+3	; 0x03
 662:	21 fd       	sbrc	r18, 1
 664:	03 c0       	rjmp	.+6      	; 0x66c <fputc+0x16>
 666:	8f ef       	ldi	r24, 0xFF	; 255
 668:	9f ef       	ldi	r25, 0xFF	; 255
 66a:	2c c0       	rjmp	.+88     	; 0x6c4 <fputc+0x6e>
 66c:	22 ff       	sbrs	r18, 2
 66e:	16 c0       	rjmp	.+44     	; 0x69c <fputc+0x46>
 670:	46 81       	ldd	r20, Z+6	; 0x06
 672:	57 81       	ldd	r21, Z+7	; 0x07
 674:	24 81       	ldd	r18, Z+4	; 0x04
 676:	35 81       	ldd	r19, Z+5	; 0x05
 678:	42 17       	cp	r20, r18
 67a:	53 07       	cpc	r21, r19
 67c:	44 f4       	brge	.+16     	; 0x68e <fputc+0x38>
 67e:	a0 81       	ld	r26, Z
 680:	b1 81       	ldd	r27, Z+1	; 0x01
 682:	9d 01       	movw	r18, r26
 684:	2f 5f       	subi	r18, 0xFF	; 255
 686:	3f 4f       	sbci	r19, 0xFF	; 255
 688:	31 83       	std	Z+1, r19	; 0x01
 68a:	20 83       	st	Z, r18
 68c:	8c 93       	st	X, r24
 68e:	26 81       	ldd	r18, Z+6	; 0x06
 690:	37 81       	ldd	r19, Z+7	; 0x07
 692:	2f 5f       	subi	r18, 0xFF	; 255
 694:	3f 4f       	sbci	r19, 0xFF	; 255
 696:	37 83       	std	Z+7, r19	; 0x07
 698:	26 83       	std	Z+6, r18	; 0x06
 69a:	14 c0       	rjmp	.+40     	; 0x6c4 <fputc+0x6e>
 69c:	8b 01       	movw	r16, r22
 69e:	ec 01       	movw	r28, r24
 6a0:	fb 01       	movw	r30, r22
 6a2:	00 84       	ldd	r0, Z+8	; 0x08
 6a4:	f1 85       	ldd	r31, Z+9	; 0x09
 6a6:	e0 2d       	mov	r30, r0
 6a8:	09 95       	icall
 6aa:	89 2b       	or	r24, r25
 6ac:	e1 f6       	brne	.-72     	; 0x666 <fputc+0x10>
 6ae:	d8 01       	movw	r26, r16
 6b0:	16 96       	adiw	r26, 0x06	; 6
 6b2:	8d 91       	ld	r24, X+
 6b4:	9c 91       	ld	r25, X
 6b6:	17 97       	sbiw	r26, 0x07	; 7
 6b8:	01 96       	adiw	r24, 0x01	; 1
 6ba:	17 96       	adiw	r26, 0x07	; 7
 6bc:	9c 93       	st	X, r25
 6be:	8e 93       	st	-X, r24
 6c0:	16 97       	sbiw	r26, 0x06	; 6
 6c2:	ce 01       	movw	r24, r28
 6c4:	df 91       	pop	r29
 6c6:	cf 91       	pop	r28
 6c8:	1f 91       	pop	r17
 6ca:	0f 91       	pop	r16
 6cc:	08 95       	ret

000006ce <__ultoa_invert>:
 6ce:	fa 01       	movw	r30, r20
 6d0:	aa 27       	eor	r26, r26
 6d2:	28 30       	cpi	r18, 0x08	; 8
 6d4:	51 f1       	breq	.+84     	; 0x72a <__ultoa_invert+0x5c>
 6d6:	20 31       	cpi	r18, 0x10	; 16
 6d8:	81 f1       	breq	.+96     	; 0x73a <__ultoa_invert+0x6c>
 6da:	e8 94       	clt
 6dc:	6f 93       	push	r22
 6de:	6e 7f       	andi	r22, 0xFE	; 254
 6e0:	6e 5f       	subi	r22, 0xFE	; 254
 6e2:	7f 4f       	sbci	r23, 0xFF	; 255
 6e4:	8f 4f       	sbci	r24, 0xFF	; 255
 6e6:	9f 4f       	sbci	r25, 0xFF	; 255
 6e8:	af 4f       	sbci	r26, 0xFF	; 255
 6ea:	b1 e0       	ldi	r27, 0x01	; 1
 6ec:	3e d0       	rcall	.+124    	; 0x76a <__ultoa_invert+0x9c>
 6ee:	b4 e0       	ldi	r27, 0x04	; 4
 6f0:	3c d0       	rcall	.+120    	; 0x76a <__ultoa_invert+0x9c>
 6f2:	67 0f       	add	r22, r23
 6f4:	78 1f       	adc	r23, r24
 6f6:	89 1f       	adc	r24, r25
 6f8:	9a 1f       	adc	r25, r26
 6fa:	a1 1d       	adc	r26, r1
 6fc:	68 0f       	add	r22, r24
 6fe:	79 1f       	adc	r23, r25
 700:	8a 1f       	adc	r24, r26
 702:	91 1d       	adc	r25, r1
 704:	a1 1d       	adc	r26, r1
 706:	6a 0f       	add	r22, r26
 708:	71 1d       	adc	r23, r1
 70a:	81 1d       	adc	r24, r1
 70c:	91 1d       	adc	r25, r1
 70e:	a1 1d       	adc	r26, r1
 710:	20 d0       	rcall	.+64     	; 0x752 <__ultoa_invert+0x84>
 712:	09 f4       	brne	.+2      	; 0x716 <__ultoa_invert+0x48>
 714:	68 94       	set
 716:	3f 91       	pop	r19
 718:	2a e0       	ldi	r18, 0x0A	; 10
 71a:	26 9f       	mul	r18, r22
 71c:	11 24       	eor	r1, r1
 71e:	30 19       	sub	r19, r0
 720:	30 5d       	subi	r19, 0xD0	; 208
 722:	31 93       	st	Z+, r19
 724:	de f6       	brtc	.-74     	; 0x6dc <__ultoa_invert+0xe>
 726:	cf 01       	movw	r24, r30
 728:	08 95       	ret
 72a:	46 2f       	mov	r20, r22
 72c:	47 70       	andi	r20, 0x07	; 7
 72e:	40 5d       	subi	r20, 0xD0	; 208
 730:	41 93       	st	Z+, r20
 732:	b3 e0       	ldi	r27, 0x03	; 3
 734:	0f d0       	rcall	.+30     	; 0x754 <__ultoa_invert+0x86>
 736:	c9 f7       	brne	.-14     	; 0x72a <__ultoa_invert+0x5c>
 738:	f6 cf       	rjmp	.-20     	; 0x726 <__ultoa_invert+0x58>
 73a:	46 2f       	mov	r20, r22
 73c:	4f 70       	andi	r20, 0x0F	; 15
 73e:	40 5d       	subi	r20, 0xD0	; 208
 740:	4a 33       	cpi	r20, 0x3A	; 58
 742:	18 f0       	brcs	.+6      	; 0x74a <__ultoa_invert+0x7c>
 744:	49 5d       	subi	r20, 0xD9	; 217
 746:	31 fd       	sbrc	r19, 1
 748:	40 52       	subi	r20, 0x20	; 32
 74a:	41 93       	st	Z+, r20
 74c:	02 d0       	rcall	.+4      	; 0x752 <__ultoa_invert+0x84>
 74e:	a9 f7       	brne	.-22     	; 0x73a <__ultoa_invert+0x6c>
 750:	ea cf       	rjmp	.-44     	; 0x726 <__ultoa_invert+0x58>
 752:	b4 e0       	ldi	r27, 0x04	; 4
 754:	a6 95       	lsr	r26
 756:	97 95       	ror	r25
 758:	87 95       	ror	r24
 75a:	77 95       	ror	r23
 75c:	67 95       	ror	r22
 75e:	ba 95       	dec	r27
 760:	c9 f7       	brne	.-14     	; 0x754 <__ultoa_invert+0x86>
 762:	00 97       	sbiw	r24, 0x00	; 0
 764:	61 05       	cpc	r22, r1
 766:	71 05       	cpc	r23, r1
 768:	08 95       	ret
 76a:	9b 01       	movw	r18, r22
 76c:	ac 01       	movw	r20, r24
 76e:	0a 2e       	mov	r0, r26
 770:	06 94       	lsr	r0
 772:	57 95       	ror	r21
 774:	47 95       	ror	r20
 776:	37 95       	ror	r19
 778:	27 95       	ror	r18
 77a:	ba 95       	dec	r27
 77c:	c9 f7       	brne	.-14     	; 0x770 <__ultoa_invert+0xa2>
 77e:	62 0f       	add	r22, r18
 780:	73 1f       	adc	r23, r19
 782:	84 1f       	adc	r24, r20
 784:	95 1f       	adc	r25, r21
 786:	a0 1d       	adc	r26, r0
 788:	08 95       	ret

0000078a <__prologue_saves__>:
 78a:	2f 92       	push	r2
 78c:	3f 92       	push	r3
 78e:	4f 92       	push	r4
 790:	5f 92       	push	r5
 792:	6f 92       	push	r6
 794:	7f 92       	push	r7
 796:	8f 92       	push	r8
 798:	9f 92       	push	r9
 79a:	af 92       	push	r10
 79c:	bf 92       	push	r11
 79e:	cf 92       	push	r12
 7a0:	df 92       	push	r13
 7a2:	ef 92       	push	r14
 7a4:	ff 92       	push	r15
 7a6:	0f 93       	push	r16
 7a8:	1f 93       	push	r17
 7aa:	cf 93       	push	r28
 7ac:	df 93       	push	r29
 7ae:	cd b7       	in	r28, 0x3d	; 61
 7b0:	de b7       	in	r29, 0x3e	; 62
 7b2:	ca 1b       	sub	r28, r26
 7b4:	db 0b       	sbc	r29, r27
 7b6:	0f b6       	in	r0, 0x3f	; 63
 7b8:	f8 94       	cli
 7ba:	de bf       	out	0x3e, r29	; 62
 7bc:	0f be       	out	0x3f, r0	; 63
 7be:	cd bf       	out	0x3d, r28	; 61
 7c0:	09 94       	ijmp

000007c2 <__epilogue_restores__>:
 7c2:	2a 88       	ldd	r2, Y+18	; 0x12
 7c4:	39 88       	ldd	r3, Y+17	; 0x11
 7c6:	48 88       	ldd	r4, Y+16	; 0x10
 7c8:	5f 84       	ldd	r5, Y+15	; 0x0f
 7ca:	6e 84       	ldd	r6, Y+14	; 0x0e
 7cc:	7d 84       	ldd	r7, Y+13	; 0x0d
 7ce:	8c 84       	ldd	r8, Y+12	; 0x0c
 7d0:	9b 84       	ldd	r9, Y+11	; 0x0b
 7d2:	aa 84       	ldd	r10, Y+10	; 0x0a
 7d4:	b9 84       	ldd	r11, Y+9	; 0x09
 7d6:	c8 84       	ldd	r12, Y+8	; 0x08
 7d8:	df 80       	ldd	r13, Y+7	; 0x07
 7da:	ee 80       	ldd	r14, Y+6	; 0x06
 7dc:	fd 80       	ldd	r15, Y+5	; 0x05
 7de:	0c 81       	ldd	r16, Y+4	; 0x04
 7e0:	1b 81       	ldd	r17, Y+3	; 0x03
 7e2:	aa 81       	ldd	r26, Y+2	; 0x02
 7e4:	b9 81       	ldd	r27, Y+1	; 0x01
 7e6:	ce 0f       	add	r28, r30
 7e8:	d1 1d       	adc	r29, r1
 7ea:	0f b6       	in	r0, 0x3f	; 63
 7ec:	f8 94       	cli
 7ee:	de bf       	out	0x3e, r29	; 62
 7f0:	0f be       	out	0x3f, r0	; 63
 7f2:	cd bf       	out	0x3d, r28	; 61
 7f4:	ed 01       	movw	r28, r26
 7f6:	08 95       	ret

000007f8 <_exit>:
 7f8:	f8 94       	cli

000007fa <__stop_program>:
 7fa:	ff cf       	rjmp	.-2      	; 0x7fa <__stop_program>
