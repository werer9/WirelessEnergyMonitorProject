
EE209.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001c  00800100  0000085c  000008d0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000085c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  000008ec  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000948  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000088  00000000  00000000  00000988  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000ada  00000000  00000000  00000a10  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000870  00000000  00000000  000014ea  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000527  00000000  00000000  00001d5a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000dc  00000000  00000000  00002284  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000045c  00000000  00000000  00002360  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000021d  00000000  00000000  000027bc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000058  00000000  00000000  000029d9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ec e5       	ldi	r30, 0x5C	; 92
  7c:	f8 e0       	ldi	r31, 0x08	; 8
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	ac 31       	cpi	r26, 0x1C	; 28
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>
  8a:	0e 94 a5 00 	call	0x14a	; 0x14a <main>
  8e:	0c 94 2c 04 	jmp	0x858	; 0x858 <_exit>

00000092 <__bad_interrupt>:
  92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <read_adc>:
	return (adc_val/ratio) * range;
}

uint16_t read_adc(uint8_t channel)
{
	ADMUX &= 0xF0;
  96:	ec e7       	ldi	r30, 0x7C	; 124
  98:	f0 e0       	ldi	r31, 0x00	; 0
  9a:	90 81       	ld	r25, Z
  9c:	90 7f       	andi	r25, 0xF0	; 240
  9e:	90 83       	st	Z, r25
	ADMUX |= channel;
  a0:	90 81       	ld	r25, Z
  a2:	89 2b       	or	r24, r25
  a4:	80 83       	st	Z, r24
	ADCSRA |= (1<<ADSC);
  a6:	ea e7       	ldi	r30, 0x7A	; 122
  a8:	f0 e0       	ldi	r31, 0x00	; 0
  aa:	80 81       	ld	r24, Z
  ac:	80 64       	ori	r24, 0x40	; 64
  ae:	80 83       	st	Z, r24
	while (ADCSRA & (1<<ADSC));
  b0:	80 81       	ld	r24, Z
  b2:	86 fd       	sbrc	r24, 6
  b4:	fd cf       	rjmp	.-6      	; 0xb0 <read_adc+0x1a>
	return ADCW;
  b6:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
  ba:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
}
  be:	08 95       	ret

000000c0 <adc_init>:

void adc_init() 
{
	ADMUX |= (1<<REFS0);
  c0:	ec e7       	ldi	r30, 0x7C	; 124
  c2:	f0 e0       	ldi	r31, 0x00	; 0
  c4:	80 81       	ld	r24, Z
  c6:	80 64       	ori	r24, 0x40	; 64
  c8:	80 83       	st	Z, r24
	ADMUX &= ~(1<<REFS1);
  ca:	80 81       	ld	r24, Z
  cc:	8f 77       	andi	r24, 0x7F	; 127
  ce:	80 83       	st	Z, r24
	ADMUX &= ~(1<<MUX3) & ~(1 << MUX2) & ~(1<<MUX1) & ~(1<<MUX0);
  d0:	80 81       	ld	r24, Z
  d2:	80 7f       	andi	r24, 0xF0	; 240
  d4:	80 83       	st	Z, r24
	ADCSRA |= (1<<ADEN) | (1<<ADPS0) | (1<<ADPS1) | (1<<ADPS2) | (1<<ADSC);
  d6:	ea e7       	ldi	r30, 0x7A	; 122
  d8:	f0 e0       	ldi	r31, 0x00	; 0
  da:	80 81       	ld	r24, Z
  dc:	87 6c       	ori	r24, 0xC7	; 199
  de:	80 83       	st	Z, r24
  e0:	08 95       	ret

000000e2 <uart_init>:
 */ 
#include "uart.h"

// uart init function
void uart_init(uint16_t ubrr)
{
  e2:	9c 01       	movw	r18, r24
	// Enable TX and RX
	UCSR0B |= (1<<RXEN0) | (1<<TXEN0);
  e4:	e1 ec       	ldi	r30, 0xC1	; 193
  e6:	f0 e0       	ldi	r31, 0x00	; 0
  e8:	90 81       	ld	r25, Z
  ea:	98 61       	ori	r25, 0x18	; 24
  ec:	90 83       	st	Z, r25
	// set character size to 8-bit
	UCSR0C |= (1<<UCSZ01) | (1<<UCSZ00);
  ee:	e2 ec       	ldi	r30, 0xC2	; 194
  f0:	f0 e0       	ldi	r31, 0x00	; 0
  f2:	90 81       	ld	r25, Z
  f4:	96 60       	ori	r25, 0x06	; 6
  f6:	90 83       	st	Z, r25
	UCSR0C &= ~(1<<UPM00);
  f8:	90 81       	ld	r25, Z
  fa:	9f 7e       	andi	r25, 0xEF	; 239
  fc:	90 83       	st	Z, r25
	UCSR0C &= ~(1<<UPM01);
  fe:	90 81       	ld	r25, Z
 100:	9f 7d       	andi	r25, 0xDF	; 223
 102:	90 83       	st	Z, r25
	// Set the baud rate
	UBRR0 = ubrr;
 104:	30 93 c5 00 	sts	0x00C5, r19	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
 108:	20 93 c4 00 	sts	0x00C4, r18	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
 10c:	08 95       	ret

0000010e <uart_transmit>:

// uart transmit function
void uart_transmit(uint8_t data)
{
	// wait until transmitter is ready
	while ((1<<UDRE0 & UCSR0A) == 0x00) {;} // do nothing
 10e:	e0 ec       	ldi	r30, 0xC0	; 192
 110:	f0 e0       	ldi	r31, 0x00	; 0
 112:	90 81       	ld	r25, Z
 114:	95 ff       	sbrs	r25, 5
 116:	fd cf       	rjmp	.-6      	; 0x112 <uart_transmit+0x4>
	// transmit data
	UDR0 = data;
 118:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 11c:	08 95       	ret

0000011e <uart_write>:
}

// uart write function
// write multiple characters at once
void uart_write(char *data) 
{
 11e:	cf 93       	push	r28
 120:	df 93       	push	r29
 122:	ec 01       	movw	r28, r24
	int i = 0;
	while (data[i] != '\0') {
 124:	88 81       	ld	r24, Y
 126:	88 23       	and	r24, r24
 128:	31 f0       	breq	.+12     	; 0x136 <uart_write+0x18>
 12a:	21 96       	adiw	r28, 0x01	; 1
		uart_transmit(data[i]);
 12c:	0e 94 87 00 	call	0x10e	; 0x10e <uart_transmit>
// uart write function
// write multiple characters at once
void uart_write(char *data) 
{
	int i = 0;
	while (data[i] != '\0') {
 130:	89 91       	ld	r24, Y+
 132:	81 11       	cpse	r24, r1
 134:	fb cf       	rjmp	.-10     	; 0x12c <uart_write+0xe>
		uart_transmit(data[i]);
		i++;
	}
}
 136:	df 91       	pop	r29
 138:	cf 91       	pop	r28
 13a:	08 95       	ret

0000013c <uart_write_line>:

// uart write line function
// write multiple characters at once on one line
void uart_write_line(char *data)
{
	uart_write(data);
 13c:	0e 94 8f 00 	call	0x11e	; 0x11e <uart_write>
	uart_write("\r\n");
 140:	80 e0       	ldi	r24, 0x00	; 0
 142:	91 e0       	ldi	r25, 0x01	; 1
 144:	0e 94 8f 00 	call	0x11e	; 0x11e <uart_write>
 148:	08 95       	ret

0000014a <main>:
#include <util/delay.h>
#include <stdio.h>


int main(void)
{
 14a:	cf 93       	push	r28
 14c:	df 93       	push	r29
 14e:	cd b7       	in	r28, 0x3d	; 61
 150:	de b7       	in	r29, 0x3e	; 62
 152:	cf 5f       	subi	r28, 0xFF	; 255
 154:	d1 09       	sbc	r29, r1
 156:	0f b6       	in	r0, 0x3f	; 63
 158:	f8 94       	cli
 15a:	de bf       	out	0x3e, r29	; 62
 15c:	0f be       	out	0x3f, r0	; 63
 15e:	cd bf       	out	0x3d, r28	; 61
    uart_init(UBBR_SETTING);
 160:	87 e6       	ldi	r24, 0x67	; 103
 162:	90 e0       	ldi	r25, 0x00	; 0
 164:	0e 94 71 00 	call	0xe2	; 0xe2 <uart_init>
	adc_init();
 168:	0e 94 60 00 	call	0xc0	; 0xc0 <adc_init>
	DDRC |= 0xFF;
 16c:	87 b1       	in	r24, 0x07	; 7
 16e:	8f ef       	ldi	r24, 0xFF	; 255
 170:	87 b9       	out	0x07, r24	; 7
	DDRC &= ~(1<<PC0) & ~(1<<PC1);
 172:	87 b1       	in	r24, 0x07	; 7
 174:	8c 7f       	andi	r24, 0xFC	; 252
 176:	87 b9       	out	0x07, r24	; 7
	uint16_t data = 0;
	char output[255] = "";
 178:	1a 82       	std	Y+2, r1	; 0x02
 17a:	19 82       	std	Y+1, r1	; 0x01
 17c:	fe 01       	movw	r30, r28
 17e:	33 96       	adiw	r30, 0x03	; 3
 180:	8d ef       	ldi	r24, 0xFD	; 253
 182:	df 01       	movw	r26, r30
 184:	1d 92       	st	X+, r1
 186:	8a 95       	dec	r24
 188:	e9 f7       	brne	.-6      	; 0x184 <main+0x3a>
    while (1) 
    {
		data = 0;
		data = read_adc(0);
		data = 5000 * (data/1023);
 18a:	0f 2e       	mov	r0, r31
 18c:	88 24       	eor	r8, r8
 18e:	8a 94       	dec	r8
 190:	f3 e0       	ldi	r31, 0x03	; 3
 192:	9f 2e       	mov	r9, r31
 194:	f0 2d       	mov	r31, r0
		uart_write_line("Channel 0:");
		snprintf(output, 255, "%u", data);
 196:	0f 2e       	mov	r0, r31
 198:	f8 e8       	ldi	r31, 0x88	; 136
 19a:	af 2e       	mov	r10, r31
 19c:	f3 e1       	ldi	r31, 0x13	; 19
 19e:	bf 2e       	mov	r11, r31
 1a0:	f0 2d       	mov	r31, r0
 1a2:	0f 2e       	mov	r0, r31
 1a4:	fe e0       	ldi	r31, 0x0E	; 14
 1a6:	ef 2e       	mov	r14, r31
 1a8:	f1 e0       	ldi	r31, 0x01	; 1
 1aa:	ff 2e       	mov	r15, r31
 1ac:	f0 2d       	mov	r31, r0
 1ae:	77 24       	eor	r7, r7
 1b0:	7a 94       	dec	r7
 1b2:	8e 01       	movw	r16, r28
 1b4:	0f 5f       	subi	r16, 0xFF	; 255
 1b6:	1f 4f       	sbci	r17, 0xFF	; 255
	uint16_t data = 0;
	char output[255] = "";
    while (1) 
    {
		data = 0;
		data = read_adc(0);
 1b8:	80 e0       	ldi	r24, 0x00	; 0
 1ba:	0e 94 4b 00 	call	0x96	; 0x96 <read_adc>
		data = 5000 * (data/1023);
 1be:	b4 01       	movw	r22, r8
 1c0:	0e 94 20 01 	call	0x240	; 0x240 <__udivmodhi4>
 1c4:	6b 01       	movw	r12, r22
		uart_write_line("Channel 0:");
 1c6:	83 e0       	ldi	r24, 0x03	; 3
 1c8:	91 e0       	ldi	r25, 0x01	; 1
 1ca:	0e 94 9e 00 	call	0x13c	; 0x13c <uart_write_line>
		snprintf(output, 255, "%u", data);
 1ce:	ca 9c       	mul	r12, r10
 1d0:	c0 01       	movw	r24, r0
 1d2:	cb 9c       	mul	r12, r11
 1d4:	90 0d       	add	r25, r0
 1d6:	da 9c       	mul	r13, r10
 1d8:	90 0d       	add	r25, r0
 1da:	11 24       	eor	r1, r1
 1dc:	9f 93       	push	r25
 1de:	8f 93       	push	r24
 1e0:	ff 92       	push	r15
 1e2:	ef 92       	push	r14
 1e4:	1f 92       	push	r1
 1e6:	7f 92       	push	r7
 1e8:	1f 93       	push	r17
 1ea:	0f 93       	push	r16
 1ec:	0e 94 34 01 	call	0x268	; 0x268 <snprintf>
		uart_write_line(output);
 1f0:	c8 01       	movw	r24, r16
 1f2:	0e 94 9e 00 	call	0x13c	; 0x13c <uart_write_line>
		data = read_adc(1);
 1f6:	81 e0       	ldi	r24, 0x01	; 1
 1f8:	0e 94 4b 00 	call	0x96	; 0x96 <read_adc>
 1fc:	d8 2e       	mov	r13, r24
 1fe:	c9 2e       	mov	r12, r25
		uart_write_line("Channel 1:");
 200:	81 e1       	ldi	r24, 0x11	; 17
 202:	91 e0       	ldi	r25, 0x01	; 1
 204:	0e 94 9e 00 	call	0x13c	; 0x13c <uart_write_line>
		snprintf(output, 255, "%u", data);
 208:	cf 92       	push	r12
 20a:	df 92       	push	r13
 20c:	ff 92       	push	r15
 20e:	ef 92       	push	r14
 210:	1f 92       	push	r1
 212:	7f 92       	push	r7
 214:	1f 93       	push	r17
 216:	0f 93       	push	r16
 218:	0e 94 34 01 	call	0x268	; 0x268 <snprintf>
		uart_write_line(output);
 21c:	c8 01       	movw	r24, r16
 21e:	0e 94 9e 00 	call	0x13c	; 0x13c <uart_write_line>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 222:	bf ef       	ldi	r27, 0xFF	; 255
 224:	23 ed       	ldi	r18, 0xD3	; 211
 226:	80 e3       	ldi	r24, 0x30	; 48
 228:	b1 50       	subi	r27, 0x01	; 1
 22a:	20 40       	sbci	r18, 0x00	; 0
 22c:	80 40       	sbci	r24, 0x00	; 0
 22e:	e1 f7       	brne	.-8      	; 0x228 <main+0xde>
 230:	00 c0       	rjmp	.+0      	; 0x232 <main+0xe8>
 232:	00 00       	nop
 234:	0f b6       	in	r0, 0x3f	; 63
 236:	f8 94       	cli
 238:	de bf       	out	0x3e, r29	; 62
 23a:	0f be       	out	0x3f, r0	; 63
 23c:	cd bf       	out	0x3d, r28	; 61
 23e:	bc cf       	rjmp	.-136    	; 0x1b8 <main+0x6e>

00000240 <__udivmodhi4>:
 240:	aa 1b       	sub	r26, r26
 242:	bb 1b       	sub	r27, r27
 244:	51 e1       	ldi	r21, 0x11	; 17
 246:	07 c0       	rjmp	.+14     	; 0x256 <__udivmodhi4_ep>

00000248 <__udivmodhi4_loop>:
 248:	aa 1f       	adc	r26, r26
 24a:	bb 1f       	adc	r27, r27
 24c:	a6 17       	cp	r26, r22
 24e:	b7 07       	cpc	r27, r23
 250:	10 f0       	brcs	.+4      	; 0x256 <__udivmodhi4_ep>
 252:	a6 1b       	sub	r26, r22
 254:	b7 0b       	sbc	r27, r23

00000256 <__udivmodhi4_ep>:
 256:	88 1f       	adc	r24, r24
 258:	99 1f       	adc	r25, r25
 25a:	5a 95       	dec	r21
 25c:	a9 f7       	brne	.-22     	; 0x248 <__udivmodhi4_loop>
 25e:	80 95       	com	r24
 260:	90 95       	com	r25
 262:	bc 01       	movw	r22, r24
 264:	cd 01       	movw	r24, r26
 266:	08 95       	ret

00000268 <snprintf>:
 268:	ae e0       	ldi	r26, 0x0E	; 14
 26a:	b0 e0       	ldi	r27, 0x00	; 0
 26c:	ea e3       	ldi	r30, 0x3A	; 58
 26e:	f1 e0       	ldi	r31, 0x01	; 1
 270:	0c 94 03 04 	jmp	0x806	; 0x806 <__prologue_saves__+0x1c>
 274:	0d 89       	ldd	r16, Y+21	; 0x15
 276:	1e 89       	ldd	r17, Y+22	; 0x16
 278:	8f 89       	ldd	r24, Y+23	; 0x17
 27a:	98 8d       	ldd	r25, Y+24	; 0x18
 27c:	26 e0       	ldi	r18, 0x06	; 6
 27e:	2c 83       	std	Y+4, r18	; 0x04
 280:	1a 83       	std	Y+2, r17	; 0x02
 282:	09 83       	std	Y+1, r16	; 0x01
 284:	97 ff       	sbrs	r25, 7
 286:	02 c0       	rjmp	.+4      	; 0x28c <snprintf+0x24>
 288:	80 e0       	ldi	r24, 0x00	; 0
 28a:	90 e8       	ldi	r25, 0x80	; 128
 28c:	01 97       	sbiw	r24, 0x01	; 1
 28e:	9e 83       	std	Y+6, r25	; 0x06
 290:	8d 83       	std	Y+5, r24	; 0x05
 292:	ae 01       	movw	r20, r28
 294:	45 5e       	subi	r20, 0xE5	; 229
 296:	5f 4f       	sbci	r21, 0xFF	; 255
 298:	69 8d       	ldd	r22, Y+25	; 0x19
 29a:	7a 8d       	ldd	r23, Y+26	; 0x1a
 29c:	ce 01       	movw	r24, r28
 29e:	01 96       	adiw	r24, 0x01	; 1
 2a0:	0e 94 64 01 	call	0x2c8	; 0x2c8 <vfprintf>
 2a4:	4d 81       	ldd	r20, Y+5	; 0x05
 2a6:	5e 81       	ldd	r21, Y+6	; 0x06
 2a8:	57 fd       	sbrc	r21, 7
 2aa:	0a c0       	rjmp	.+20     	; 0x2c0 <snprintf+0x58>
 2ac:	2f 81       	ldd	r18, Y+7	; 0x07
 2ae:	38 85       	ldd	r19, Y+8	; 0x08
 2b0:	42 17       	cp	r20, r18
 2b2:	53 07       	cpc	r21, r19
 2b4:	0c f4       	brge	.+2      	; 0x2b8 <snprintf+0x50>
 2b6:	9a 01       	movw	r18, r20
 2b8:	f8 01       	movw	r30, r16
 2ba:	e2 0f       	add	r30, r18
 2bc:	f3 1f       	adc	r31, r19
 2be:	10 82       	st	Z, r1
 2c0:	2e 96       	adiw	r28, 0x0e	; 14
 2c2:	e4 e0       	ldi	r30, 0x04	; 4
 2c4:	0c 94 1f 04 	jmp	0x83e	; 0x83e <__epilogue_restores__+0x1c>

000002c8 <vfprintf>:
 2c8:	ab e0       	ldi	r26, 0x0B	; 11
 2ca:	b0 e0       	ldi	r27, 0x00	; 0
 2cc:	ea e6       	ldi	r30, 0x6A	; 106
 2ce:	f1 e0       	ldi	r31, 0x01	; 1
 2d0:	0c 94 f5 03 	jmp	0x7ea	; 0x7ea <__prologue_saves__>
 2d4:	6c 01       	movw	r12, r24
 2d6:	7b 01       	movw	r14, r22
 2d8:	8a 01       	movw	r16, r20
 2da:	fc 01       	movw	r30, r24
 2dc:	17 82       	std	Z+7, r1	; 0x07
 2de:	16 82       	std	Z+6, r1	; 0x06
 2e0:	83 81       	ldd	r24, Z+3	; 0x03
 2e2:	81 ff       	sbrs	r24, 1
 2e4:	cc c1       	rjmp	.+920    	; 0x67e <__LOCK_REGION_LENGTH__+0x27e>
 2e6:	ce 01       	movw	r24, r28
 2e8:	01 96       	adiw	r24, 0x01	; 1
 2ea:	3c 01       	movw	r6, r24
 2ec:	f6 01       	movw	r30, r12
 2ee:	93 81       	ldd	r25, Z+3	; 0x03
 2f0:	f7 01       	movw	r30, r14
 2f2:	93 fd       	sbrc	r25, 3
 2f4:	85 91       	lpm	r24, Z+
 2f6:	93 ff       	sbrs	r25, 3
 2f8:	81 91       	ld	r24, Z+
 2fa:	7f 01       	movw	r14, r30
 2fc:	88 23       	and	r24, r24
 2fe:	09 f4       	brne	.+2      	; 0x302 <vfprintf+0x3a>
 300:	ba c1       	rjmp	.+884    	; 0x676 <__LOCK_REGION_LENGTH__+0x276>
 302:	85 32       	cpi	r24, 0x25	; 37
 304:	39 f4       	brne	.+14     	; 0x314 <vfprintf+0x4c>
 306:	93 fd       	sbrc	r25, 3
 308:	85 91       	lpm	r24, Z+
 30a:	93 ff       	sbrs	r25, 3
 30c:	81 91       	ld	r24, Z+
 30e:	7f 01       	movw	r14, r30
 310:	85 32       	cpi	r24, 0x25	; 37
 312:	29 f4       	brne	.+10     	; 0x31e <vfprintf+0x56>
 314:	b6 01       	movw	r22, r12
 316:	90 e0       	ldi	r25, 0x00	; 0
 318:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <fputc>
 31c:	e7 cf       	rjmp	.-50     	; 0x2ec <vfprintf+0x24>
 31e:	91 2c       	mov	r9, r1
 320:	21 2c       	mov	r2, r1
 322:	31 2c       	mov	r3, r1
 324:	ff e1       	ldi	r31, 0x1F	; 31
 326:	f3 15       	cp	r31, r3
 328:	d8 f0       	brcs	.+54     	; 0x360 <vfprintf+0x98>
 32a:	8b 32       	cpi	r24, 0x2B	; 43
 32c:	79 f0       	breq	.+30     	; 0x34c <vfprintf+0x84>
 32e:	38 f4       	brcc	.+14     	; 0x33e <vfprintf+0x76>
 330:	80 32       	cpi	r24, 0x20	; 32
 332:	79 f0       	breq	.+30     	; 0x352 <vfprintf+0x8a>
 334:	83 32       	cpi	r24, 0x23	; 35
 336:	a1 f4       	brne	.+40     	; 0x360 <vfprintf+0x98>
 338:	23 2d       	mov	r18, r3
 33a:	20 61       	ori	r18, 0x10	; 16
 33c:	1d c0       	rjmp	.+58     	; 0x378 <vfprintf+0xb0>
 33e:	8d 32       	cpi	r24, 0x2D	; 45
 340:	61 f0       	breq	.+24     	; 0x35a <vfprintf+0x92>
 342:	80 33       	cpi	r24, 0x30	; 48
 344:	69 f4       	brne	.+26     	; 0x360 <vfprintf+0x98>
 346:	23 2d       	mov	r18, r3
 348:	21 60       	ori	r18, 0x01	; 1
 34a:	16 c0       	rjmp	.+44     	; 0x378 <vfprintf+0xb0>
 34c:	83 2d       	mov	r24, r3
 34e:	82 60       	ori	r24, 0x02	; 2
 350:	38 2e       	mov	r3, r24
 352:	e3 2d       	mov	r30, r3
 354:	e4 60       	ori	r30, 0x04	; 4
 356:	3e 2e       	mov	r3, r30
 358:	2a c0       	rjmp	.+84     	; 0x3ae <vfprintf+0xe6>
 35a:	f3 2d       	mov	r31, r3
 35c:	f8 60       	ori	r31, 0x08	; 8
 35e:	1d c0       	rjmp	.+58     	; 0x39a <vfprintf+0xd2>
 360:	37 fc       	sbrc	r3, 7
 362:	2d c0       	rjmp	.+90     	; 0x3be <vfprintf+0xf6>
 364:	20 ed       	ldi	r18, 0xD0	; 208
 366:	28 0f       	add	r18, r24
 368:	2a 30       	cpi	r18, 0x0A	; 10
 36a:	40 f0       	brcs	.+16     	; 0x37c <vfprintf+0xb4>
 36c:	8e 32       	cpi	r24, 0x2E	; 46
 36e:	b9 f4       	brne	.+46     	; 0x39e <vfprintf+0xd6>
 370:	36 fc       	sbrc	r3, 6
 372:	81 c1       	rjmp	.+770    	; 0x676 <__LOCK_REGION_LENGTH__+0x276>
 374:	23 2d       	mov	r18, r3
 376:	20 64       	ori	r18, 0x40	; 64
 378:	32 2e       	mov	r3, r18
 37a:	19 c0       	rjmp	.+50     	; 0x3ae <vfprintf+0xe6>
 37c:	36 fe       	sbrs	r3, 6
 37e:	06 c0       	rjmp	.+12     	; 0x38c <vfprintf+0xc4>
 380:	8a e0       	ldi	r24, 0x0A	; 10
 382:	98 9e       	mul	r9, r24
 384:	20 0d       	add	r18, r0
 386:	11 24       	eor	r1, r1
 388:	92 2e       	mov	r9, r18
 38a:	11 c0       	rjmp	.+34     	; 0x3ae <vfprintf+0xe6>
 38c:	ea e0       	ldi	r30, 0x0A	; 10
 38e:	2e 9e       	mul	r2, r30
 390:	20 0d       	add	r18, r0
 392:	11 24       	eor	r1, r1
 394:	22 2e       	mov	r2, r18
 396:	f3 2d       	mov	r31, r3
 398:	f0 62       	ori	r31, 0x20	; 32
 39a:	3f 2e       	mov	r3, r31
 39c:	08 c0       	rjmp	.+16     	; 0x3ae <vfprintf+0xe6>
 39e:	8c 36       	cpi	r24, 0x6C	; 108
 3a0:	21 f4       	brne	.+8      	; 0x3aa <vfprintf+0xe2>
 3a2:	83 2d       	mov	r24, r3
 3a4:	80 68       	ori	r24, 0x80	; 128
 3a6:	38 2e       	mov	r3, r24
 3a8:	02 c0       	rjmp	.+4      	; 0x3ae <vfprintf+0xe6>
 3aa:	88 36       	cpi	r24, 0x68	; 104
 3ac:	41 f4       	brne	.+16     	; 0x3be <vfprintf+0xf6>
 3ae:	f7 01       	movw	r30, r14
 3b0:	93 fd       	sbrc	r25, 3
 3b2:	85 91       	lpm	r24, Z+
 3b4:	93 ff       	sbrs	r25, 3
 3b6:	81 91       	ld	r24, Z+
 3b8:	7f 01       	movw	r14, r30
 3ba:	81 11       	cpse	r24, r1
 3bc:	b3 cf       	rjmp	.-154    	; 0x324 <vfprintf+0x5c>
 3be:	98 2f       	mov	r25, r24
 3c0:	9f 7d       	andi	r25, 0xDF	; 223
 3c2:	95 54       	subi	r25, 0x45	; 69
 3c4:	93 30       	cpi	r25, 0x03	; 3
 3c6:	28 f4       	brcc	.+10     	; 0x3d2 <vfprintf+0x10a>
 3c8:	0c 5f       	subi	r16, 0xFC	; 252
 3ca:	1f 4f       	sbci	r17, 0xFF	; 255
 3cc:	9f e3       	ldi	r25, 0x3F	; 63
 3ce:	99 83       	std	Y+1, r25	; 0x01
 3d0:	0d c0       	rjmp	.+26     	; 0x3ec <vfprintf+0x124>
 3d2:	83 36       	cpi	r24, 0x63	; 99
 3d4:	31 f0       	breq	.+12     	; 0x3e2 <vfprintf+0x11a>
 3d6:	83 37       	cpi	r24, 0x73	; 115
 3d8:	71 f0       	breq	.+28     	; 0x3f6 <vfprintf+0x12e>
 3da:	83 35       	cpi	r24, 0x53	; 83
 3dc:	09 f0       	breq	.+2      	; 0x3e0 <vfprintf+0x118>
 3de:	59 c0       	rjmp	.+178    	; 0x492 <__LOCK_REGION_LENGTH__+0x92>
 3e0:	21 c0       	rjmp	.+66     	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
 3e2:	f8 01       	movw	r30, r16
 3e4:	80 81       	ld	r24, Z
 3e6:	89 83       	std	Y+1, r24	; 0x01
 3e8:	0e 5f       	subi	r16, 0xFE	; 254
 3ea:	1f 4f       	sbci	r17, 0xFF	; 255
 3ec:	88 24       	eor	r8, r8
 3ee:	83 94       	inc	r8
 3f0:	91 2c       	mov	r9, r1
 3f2:	53 01       	movw	r10, r6
 3f4:	13 c0       	rjmp	.+38     	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 3f6:	28 01       	movw	r4, r16
 3f8:	f2 e0       	ldi	r31, 0x02	; 2
 3fa:	4f 0e       	add	r4, r31
 3fc:	51 1c       	adc	r5, r1
 3fe:	f8 01       	movw	r30, r16
 400:	a0 80       	ld	r10, Z
 402:	b1 80       	ldd	r11, Z+1	; 0x01
 404:	36 fe       	sbrs	r3, 6
 406:	03 c0       	rjmp	.+6      	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 408:	69 2d       	mov	r22, r9
 40a:	70 e0       	ldi	r23, 0x00	; 0
 40c:	02 c0       	rjmp	.+4      	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 40e:	6f ef       	ldi	r22, 0xFF	; 255
 410:	7f ef       	ldi	r23, 0xFF	; 255
 412:	c5 01       	movw	r24, r10
 414:	0e 94 50 03 	call	0x6a0	; 0x6a0 <strnlen>
 418:	4c 01       	movw	r8, r24
 41a:	82 01       	movw	r16, r4
 41c:	f3 2d       	mov	r31, r3
 41e:	ff 77       	andi	r31, 0x7F	; 127
 420:	3f 2e       	mov	r3, r31
 422:	16 c0       	rjmp	.+44     	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
 424:	28 01       	movw	r4, r16
 426:	22 e0       	ldi	r18, 0x02	; 2
 428:	42 0e       	add	r4, r18
 42a:	51 1c       	adc	r5, r1
 42c:	f8 01       	movw	r30, r16
 42e:	a0 80       	ld	r10, Z
 430:	b1 80       	ldd	r11, Z+1	; 0x01
 432:	36 fe       	sbrs	r3, 6
 434:	03 c0       	rjmp	.+6      	; 0x43c <__LOCK_REGION_LENGTH__+0x3c>
 436:	69 2d       	mov	r22, r9
 438:	70 e0       	ldi	r23, 0x00	; 0
 43a:	02 c0       	rjmp	.+4      	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
 43c:	6f ef       	ldi	r22, 0xFF	; 255
 43e:	7f ef       	ldi	r23, 0xFF	; 255
 440:	c5 01       	movw	r24, r10
 442:	0e 94 45 03 	call	0x68a	; 0x68a <strnlen_P>
 446:	4c 01       	movw	r8, r24
 448:	f3 2d       	mov	r31, r3
 44a:	f0 68       	ori	r31, 0x80	; 128
 44c:	3f 2e       	mov	r3, r31
 44e:	82 01       	movw	r16, r4
 450:	33 fc       	sbrc	r3, 3
 452:	1b c0       	rjmp	.+54     	; 0x48a <__LOCK_REGION_LENGTH__+0x8a>
 454:	82 2d       	mov	r24, r2
 456:	90 e0       	ldi	r25, 0x00	; 0
 458:	88 16       	cp	r8, r24
 45a:	99 06       	cpc	r9, r25
 45c:	b0 f4       	brcc	.+44     	; 0x48a <__LOCK_REGION_LENGTH__+0x8a>
 45e:	b6 01       	movw	r22, r12
 460:	80 e2       	ldi	r24, 0x20	; 32
 462:	90 e0       	ldi	r25, 0x00	; 0
 464:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <fputc>
 468:	2a 94       	dec	r2
 46a:	f4 cf       	rjmp	.-24     	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
 46c:	f5 01       	movw	r30, r10
 46e:	37 fc       	sbrc	r3, 7
 470:	85 91       	lpm	r24, Z+
 472:	37 fe       	sbrs	r3, 7
 474:	81 91       	ld	r24, Z+
 476:	5f 01       	movw	r10, r30
 478:	b6 01       	movw	r22, r12
 47a:	90 e0       	ldi	r25, 0x00	; 0
 47c:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <fputc>
 480:	21 10       	cpse	r2, r1
 482:	2a 94       	dec	r2
 484:	21 e0       	ldi	r18, 0x01	; 1
 486:	82 1a       	sub	r8, r18
 488:	91 08       	sbc	r9, r1
 48a:	81 14       	cp	r8, r1
 48c:	91 04       	cpc	r9, r1
 48e:	71 f7       	brne	.-36     	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
 490:	e8 c0       	rjmp	.+464    	; 0x662 <__LOCK_REGION_LENGTH__+0x262>
 492:	84 36       	cpi	r24, 0x64	; 100
 494:	11 f0       	breq	.+4      	; 0x49a <__LOCK_REGION_LENGTH__+0x9a>
 496:	89 36       	cpi	r24, 0x69	; 105
 498:	41 f5       	brne	.+80     	; 0x4ea <__LOCK_REGION_LENGTH__+0xea>
 49a:	f8 01       	movw	r30, r16
 49c:	37 fe       	sbrs	r3, 7
 49e:	07 c0       	rjmp	.+14     	; 0x4ae <__LOCK_REGION_LENGTH__+0xae>
 4a0:	60 81       	ld	r22, Z
 4a2:	71 81       	ldd	r23, Z+1	; 0x01
 4a4:	82 81       	ldd	r24, Z+2	; 0x02
 4a6:	93 81       	ldd	r25, Z+3	; 0x03
 4a8:	0c 5f       	subi	r16, 0xFC	; 252
 4aa:	1f 4f       	sbci	r17, 0xFF	; 255
 4ac:	08 c0       	rjmp	.+16     	; 0x4be <__LOCK_REGION_LENGTH__+0xbe>
 4ae:	60 81       	ld	r22, Z
 4b0:	71 81       	ldd	r23, Z+1	; 0x01
 4b2:	07 2e       	mov	r0, r23
 4b4:	00 0c       	add	r0, r0
 4b6:	88 0b       	sbc	r24, r24
 4b8:	99 0b       	sbc	r25, r25
 4ba:	0e 5f       	subi	r16, 0xFE	; 254
 4bc:	1f 4f       	sbci	r17, 0xFF	; 255
 4be:	f3 2d       	mov	r31, r3
 4c0:	ff 76       	andi	r31, 0x6F	; 111
 4c2:	3f 2e       	mov	r3, r31
 4c4:	97 ff       	sbrs	r25, 7
 4c6:	09 c0       	rjmp	.+18     	; 0x4da <__LOCK_REGION_LENGTH__+0xda>
 4c8:	90 95       	com	r25
 4ca:	80 95       	com	r24
 4cc:	70 95       	com	r23
 4ce:	61 95       	neg	r22
 4d0:	7f 4f       	sbci	r23, 0xFF	; 255
 4d2:	8f 4f       	sbci	r24, 0xFF	; 255
 4d4:	9f 4f       	sbci	r25, 0xFF	; 255
 4d6:	f0 68       	ori	r31, 0x80	; 128
 4d8:	3f 2e       	mov	r3, r31
 4da:	2a e0       	ldi	r18, 0x0A	; 10
 4dc:	30 e0       	ldi	r19, 0x00	; 0
 4de:	a3 01       	movw	r20, r6
 4e0:	0e 94 97 03 	call	0x72e	; 0x72e <__ultoa_invert>
 4e4:	88 2e       	mov	r8, r24
 4e6:	86 18       	sub	r8, r6
 4e8:	45 c0       	rjmp	.+138    	; 0x574 <__LOCK_REGION_LENGTH__+0x174>
 4ea:	85 37       	cpi	r24, 0x75	; 117
 4ec:	31 f4       	brne	.+12     	; 0x4fa <__LOCK_REGION_LENGTH__+0xfa>
 4ee:	23 2d       	mov	r18, r3
 4f0:	2f 7e       	andi	r18, 0xEF	; 239
 4f2:	b2 2e       	mov	r11, r18
 4f4:	2a e0       	ldi	r18, 0x0A	; 10
 4f6:	30 e0       	ldi	r19, 0x00	; 0
 4f8:	25 c0       	rjmp	.+74     	; 0x544 <__LOCK_REGION_LENGTH__+0x144>
 4fa:	93 2d       	mov	r25, r3
 4fc:	99 7f       	andi	r25, 0xF9	; 249
 4fe:	b9 2e       	mov	r11, r25
 500:	8f 36       	cpi	r24, 0x6F	; 111
 502:	c1 f0       	breq	.+48     	; 0x534 <__LOCK_REGION_LENGTH__+0x134>
 504:	18 f4       	brcc	.+6      	; 0x50c <__LOCK_REGION_LENGTH__+0x10c>
 506:	88 35       	cpi	r24, 0x58	; 88
 508:	79 f0       	breq	.+30     	; 0x528 <__LOCK_REGION_LENGTH__+0x128>
 50a:	b5 c0       	rjmp	.+362    	; 0x676 <__LOCK_REGION_LENGTH__+0x276>
 50c:	80 37       	cpi	r24, 0x70	; 112
 50e:	19 f0       	breq	.+6      	; 0x516 <__LOCK_REGION_LENGTH__+0x116>
 510:	88 37       	cpi	r24, 0x78	; 120
 512:	21 f0       	breq	.+8      	; 0x51c <__LOCK_REGION_LENGTH__+0x11c>
 514:	b0 c0       	rjmp	.+352    	; 0x676 <__LOCK_REGION_LENGTH__+0x276>
 516:	e9 2f       	mov	r30, r25
 518:	e0 61       	ori	r30, 0x10	; 16
 51a:	be 2e       	mov	r11, r30
 51c:	b4 fe       	sbrs	r11, 4
 51e:	0d c0       	rjmp	.+26     	; 0x53a <__LOCK_REGION_LENGTH__+0x13a>
 520:	fb 2d       	mov	r31, r11
 522:	f4 60       	ori	r31, 0x04	; 4
 524:	bf 2e       	mov	r11, r31
 526:	09 c0       	rjmp	.+18     	; 0x53a <__LOCK_REGION_LENGTH__+0x13a>
 528:	34 fe       	sbrs	r3, 4
 52a:	0a c0       	rjmp	.+20     	; 0x540 <__LOCK_REGION_LENGTH__+0x140>
 52c:	29 2f       	mov	r18, r25
 52e:	26 60       	ori	r18, 0x06	; 6
 530:	b2 2e       	mov	r11, r18
 532:	06 c0       	rjmp	.+12     	; 0x540 <__LOCK_REGION_LENGTH__+0x140>
 534:	28 e0       	ldi	r18, 0x08	; 8
 536:	30 e0       	ldi	r19, 0x00	; 0
 538:	05 c0       	rjmp	.+10     	; 0x544 <__LOCK_REGION_LENGTH__+0x144>
 53a:	20 e1       	ldi	r18, 0x10	; 16
 53c:	30 e0       	ldi	r19, 0x00	; 0
 53e:	02 c0       	rjmp	.+4      	; 0x544 <__LOCK_REGION_LENGTH__+0x144>
 540:	20 e1       	ldi	r18, 0x10	; 16
 542:	32 e0       	ldi	r19, 0x02	; 2
 544:	f8 01       	movw	r30, r16
 546:	b7 fe       	sbrs	r11, 7
 548:	07 c0       	rjmp	.+14     	; 0x558 <__LOCK_REGION_LENGTH__+0x158>
 54a:	60 81       	ld	r22, Z
 54c:	71 81       	ldd	r23, Z+1	; 0x01
 54e:	82 81       	ldd	r24, Z+2	; 0x02
 550:	93 81       	ldd	r25, Z+3	; 0x03
 552:	0c 5f       	subi	r16, 0xFC	; 252
 554:	1f 4f       	sbci	r17, 0xFF	; 255
 556:	06 c0       	rjmp	.+12     	; 0x564 <__LOCK_REGION_LENGTH__+0x164>
 558:	60 81       	ld	r22, Z
 55a:	71 81       	ldd	r23, Z+1	; 0x01
 55c:	80 e0       	ldi	r24, 0x00	; 0
 55e:	90 e0       	ldi	r25, 0x00	; 0
 560:	0e 5f       	subi	r16, 0xFE	; 254
 562:	1f 4f       	sbci	r17, 0xFF	; 255
 564:	a3 01       	movw	r20, r6
 566:	0e 94 97 03 	call	0x72e	; 0x72e <__ultoa_invert>
 56a:	88 2e       	mov	r8, r24
 56c:	86 18       	sub	r8, r6
 56e:	fb 2d       	mov	r31, r11
 570:	ff 77       	andi	r31, 0x7F	; 127
 572:	3f 2e       	mov	r3, r31
 574:	36 fe       	sbrs	r3, 6
 576:	0d c0       	rjmp	.+26     	; 0x592 <__LOCK_REGION_LENGTH__+0x192>
 578:	23 2d       	mov	r18, r3
 57a:	2e 7f       	andi	r18, 0xFE	; 254
 57c:	a2 2e       	mov	r10, r18
 57e:	89 14       	cp	r8, r9
 580:	58 f4       	brcc	.+22     	; 0x598 <__LOCK_REGION_LENGTH__+0x198>
 582:	34 fe       	sbrs	r3, 4
 584:	0b c0       	rjmp	.+22     	; 0x59c <__LOCK_REGION_LENGTH__+0x19c>
 586:	32 fc       	sbrc	r3, 2
 588:	09 c0       	rjmp	.+18     	; 0x59c <__LOCK_REGION_LENGTH__+0x19c>
 58a:	83 2d       	mov	r24, r3
 58c:	8e 7e       	andi	r24, 0xEE	; 238
 58e:	a8 2e       	mov	r10, r24
 590:	05 c0       	rjmp	.+10     	; 0x59c <__LOCK_REGION_LENGTH__+0x19c>
 592:	b8 2c       	mov	r11, r8
 594:	a3 2c       	mov	r10, r3
 596:	03 c0       	rjmp	.+6      	; 0x59e <__LOCK_REGION_LENGTH__+0x19e>
 598:	b8 2c       	mov	r11, r8
 59a:	01 c0       	rjmp	.+2      	; 0x59e <__LOCK_REGION_LENGTH__+0x19e>
 59c:	b9 2c       	mov	r11, r9
 59e:	a4 fe       	sbrs	r10, 4
 5a0:	0f c0       	rjmp	.+30     	; 0x5c0 <__LOCK_REGION_LENGTH__+0x1c0>
 5a2:	fe 01       	movw	r30, r28
 5a4:	e8 0d       	add	r30, r8
 5a6:	f1 1d       	adc	r31, r1
 5a8:	80 81       	ld	r24, Z
 5aa:	80 33       	cpi	r24, 0x30	; 48
 5ac:	21 f4       	brne	.+8      	; 0x5b6 <__LOCK_REGION_LENGTH__+0x1b6>
 5ae:	9a 2d       	mov	r25, r10
 5b0:	99 7e       	andi	r25, 0xE9	; 233
 5b2:	a9 2e       	mov	r10, r25
 5b4:	09 c0       	rjmp	.+18     	; 0x5c8 <__LOCK_REGION_LENGTH__+0x1c8>
 5b6:	a2 fe       	sbrs	r10, 2
 5b8:	06 c0       	rjmp	.+12     	; 0x5c6 <__LOCK_REGION_LENGTH__+0x1c6>
 5ba:	b3 94       	inc	r11
 5bc:	b3 94       	inc	r11
 5be:	04 c0       	rjmp	.+8      	; 0x5c8 <__LOCK_REGION_LENGTH__+0x1c8>
 5c0:	8a 2d       	mov	r24, r10
 5c2:	86 78       	andi	r24, 0x86	; 134
 5c4:	09 f0       	breq	.+2      	; 0x5c8 <__LOCK_REGION_LENGTH__+0x1c8>
 5c6:	b3 94       	inc	r11
 5c8:	a3 fc       	sbrc	r10, 3
 5ca:	11 c0       	rjmp	.+34     	; 0x5ee <__LOCK_REGION_LENGTH__+0x1ee>
 5cc:	a0 fe       	sbrs	r10, 0
 5ce:	06 c0       	rjmp	.+12     	; 0x5dc <__LOCK_REGION_LENGTH__+0x1dc>
 5d0:	b2 14       	cp	r11, r2
 5d2:	88 f4       	brcc	.+34     	; 0x5f6 <__LOCK_REGION_LENGTH__+0x1f6>
 5d4:	28 0c       	add	r2, r8
 5d6:	92 2c       	mov	r9, r2
 5d8:	9b 18       	sub	r9, r11
 5da:	0e c0       	rjmp	.+28     	; 0x5f8 <__LOCK_REGION_LENGTH__+0x1f8>
 5dc:	b2 14       	cp	r11, r2
 5de:	60 f4       	brcc	.+24     	; 0x5f8 <__LOCK_REGION_LENGTH__+0x1f8>
 5e0:	b6 01       	movw	r22, r12
 5e2:	80 e2       	ldi	r24, 0x20	; 32
 5e4:	90 e0       	ldi	r25, 0x00	; 0
 5e6:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <fputc>
 5ea:	b3 94       	inc	r11
 5ec:	f7 cf       	rjmp	.-18     	; 0x5dc <__LOCK_REGION_LENGTH__+0x1dc>
 5ee:	b2 14       	cp	r11, r2
 5f0:	18 f4       	brcc	.+6      	; 0x5f8 <__LOCK_REGION_LENGTH__+0x1f8>
 5f2:	2b 18       	sub	r2, r11
 5f4:	02 c0       	rjmp	.+4      	; 0x5fa <__LOCK_REGION_LENGTH__+0x1fa>
 5f6:	98 2c       	mov	r9, r8
 5f8:	21 2c       	mov	r2, r1
 5fa:	a4 fe       	sbrs	r10, 4
 5fc:	10 c0       	rjmp	.+32     	; 0x61e <__LOCK_REGION_LENGTH__+0x21e>
 5fe:	b6 01       	movw	r22, r12
 600:	80 e3       	ldi	r24, 0x30	; 48
 602:	90 e0       	ldi	r25, 0x00	; 0
 604:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <fputc>
 608:	a2 fe       	sbrs	r10, 2
 60a:	17 c0       	rjmp	.+46     	; 0x63a <__LOCK_REGION_LENGTH__+0x23a>
 60c:	a1 fc       	sbrc	r10, 1
 60e:	03 c0       	rjmp	.+6      	; 0x616 <__LOCK_REGION_LENGTH__+0x216>
 610:	88 e7       	ldi	r24, 0x78	; 120
 612:	90 e0       	ldi	r25, 0x00	; 0
 614:	02 c0       	rjmp	.+4      	; 0x61a <__LOCK_REGION_LENGTH__+0x21a>
 616:	88 e5       	ldi	r24, 0x58	; 88
 618:	90 e0       	ldi	r25, 0x00	; 0
 61a:	b6 01       	movw	r22, r12
 61c:	0c c0       	rjmp	.+24     	; 0x636 <__LOCK_REGION_LENGTH__+0x236>
 61e:	8a 2d       	mov	r24, r10
 620:	86 78       	andi	r24, 0x86	; 134
 622:	59 f0       	breq	.+22     	; 0x63a <__LOCK_REGION_LENGTH__+0x23a>
 624:	a1 fe       	sbrs	r10, 1
 626:	02 c0       	rjmp	.+4      	; 0x62c <__LOCK_REGION_LENGTH__+0x22c>
 628:	8b e2       	ldi	r24, 0x2B	; 43
 62a:	01 c0       	rjmp	.+2      	; 0x62e <__LOCK_REGION_LENGTH__+0x22e>
 62c:	80 e2       	ldi	r24, 0x20	; 32
 62e:	a7 fc       	sbrc	r10, 7
 630:	8d e2       	ldi	r24, 0x2D	; 45
 632:	b6 01       	movw	r22, r12
 634:	90 e0       	ldi	r25, 0x00	; 0
 636:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <fputc>
 63a:	89 14       	cp	r8, r9
 63c:	38 f4       	brcc	.+14     	; 0x64c <__LOCK_REGION_LENGTH__+0x24c>
 63e:	b6 01       	movw	r22, r12
 640:	80 e3       	ldi	r24, 0x30	; 48
 642:	90 e0       	ldi	r25, 0x00	; 0
 644:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <fputc>
 648:	9a 94       	dec	r9
 64a:	f7 cf       	rjmp	.-18     	; 0x63a <__LOCK_REGION_LENGTH__+0x23a>
 64c:	8a 94       	dec	r8
 64e:	f3 01       	movw	r30, r6
 650:	e8 0d       	add	r30, r8
 652:	f1 1d       	adc	r31, r1
 654:	80 81       	ld	r24, Z
 656:	b6 01       	movw	r22, r12
 658:	90 e0       	ldi	r25, 0x00	; 0
 65a:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <fputc>
 65e:	81 10       	cpse	r8, r1
 660:	f5 cf       	rjmp	.-22     	; 0x64c <__LOCK_REGION_LENGTH__+0x24c>
 662:	22 20       	and	r2, r2
 664:	09 f4       	brne	.+2      	; 0x668 <__LOCK_REGION_LENGTH__+0x268>
 666:	42 ce       	rjmp	.-892    	; 0x2ec <vfprintf+0x24>
 668:	b6 01       	movw	r22, r12
 66a:	80 e2       	ldi	r24, 0x20	; 32
 66c:	90 e0       	ldi	r25, 0x00	; 0
 66e:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <fputc>
 672:	2a 94       	dec	r2
 674:	f6 cf       	rjmp	.-20     	; 0x662 <__LOCK_REGION_LENGTH__+0x262>
 676:	f6 01       	movw	r30, r12
 678:	86 81       	ldd	r24, Z+6	; 0x06
 67a:	97 81       	ldd	r25, Z+7	; 0x07
 67c:	02 c0       	rjmp	.+4      	; 0x682 <__LOCK_REGION_LENGTH__+0x282>
 67e:	8f ef       	ldi	r24, 0xFF	; 255
 680:	9f ef       	ldi	r25, 0xFF	; 255
 682:	2b 96       	adiw	r28, 0x0b	; 11
 684:	e2 e1       	ldi	r30, 0x12	; 18
 686:	0c 94 11 04 	jmp	0x822	; 0x822 <__epilogue_restores__>

0000068a <strnlen_P>:
 68a:	fc 01       	movw	r30, r24
 68c:	05 90       	lpm	r0, Z+
 68e:	61 50       	subi	r22, 0x01	; 1
 690:	70 40       	sbci	r23, 0x00	; 0
 692:	01 10       	cpse	r0, r1
 694:	d8 f7       	brcc	.-10     	; 0x68c <strnlen_P+0x2>
 696:	80 95       	com	r24
 698:	90 95       	com	r25
 69a:	8e 0f       	add	r24, r30
 69c:	9f 1f       	adc	r25, r31
 69e:	08 95       	ret

000006a0 <strnlen>:
 6a0:	fc 01       	movw	r30, r24
 6a2:	61 50       	subi	r22, 0x01	; 1
 6a4:	70 40       	sbci	r23, 0x00	; 0
 6a6:	01 90       	ld	r0, Z+
 6a8:	01 10       	cpse	r0, r1
 6aa:	d8 f7       	brcc	.-10     	; 0x6a2 <strnlen+0x2>
 6ac:	80 95       	com	r24
 6ae:	90 95       	com	r25
 6b0:	8e 0f       	add	r24, r30
 6b2:	9f 1f       	adc	r25, r31
 6b4:	08 95       	ret

000006b6 <fputc>:
 6b6:	0f 93       	push	r16
 6b8:	1f 93       	push	r17
 6ba:	cf 93       	push	r28
 6bc:	df 93       	push	r29
 6be:	fb 01       	movw	r30, r22
 6c0:	23 81       	ldd	r18, Z+3	; 0x03
 6c2:	21 fd       	sbrc	r18, 1
 6c4:	03 c0       	rjmp	.+6      	; 0x6cc <fputc+0x16>
 6c6:	8f ef       	ldi	r24, 0xFF	; 255
 6c8:	9f ef       	ldi	r25, 0xFF	; 255
 6ca:	2c c0       	rjmp	.+88     	; 0x724 <fputc+0x6e>
 6cc:	22 ff       	sbrs	r18, 2
 6ce:	16 c0       	rjmp	.+44     	; 0x6fc <fputc+0x46>
 6d0:	46 81       	ldd	r20, Z+6	; 0x06
 6d2:	57 81       	ldd	r21, Z+7	; 0x07
 6d4:	24 81       	ldd	r18, Z+4	; 0x04
 6d6:	35 81       	ldd	r19, Z+5	; 0x05
 6d8:	42 17       	cp	r20, r18
 6da:	53 07       	cpc	r21, r19
 6dc:	44 f4       	brge	.+16     	; 0x6ee <fputc+0x38>
 6de:	a0 81       	ld	r26, Z
 6e0:	b1 81       	ldd	r27, Z+1	; 0x01
 6e2:	9d 01       	movw	r18, r26
 6e4:	2f 5f       	subi	r18, 0xFF	; 255
 6e6:	3f 4f       	sbci	r19, 0xFF	; 255
 6e8:	31 83       	std	Z+1, r19	; 0x01
 6ea:	20 83       	st	Z, r18
 6ec:	8c 93       	st	X, r24
 6ee:	26 81       	ldd	r18, Z+6	; 0x06
 6f0:	37 81       	ldd	r19, Z+7	; 0x07
 6f2:	2f 5f       	subi	r18, 0xFF	; 255
 6f4:	3f 4f       	sbci	r19, 0xFF	; 255
 6f6:	37 83       	std	Z+7, r19	; 0x07
 6f8:	26 83       	std	Z+6, r18	; 0x06
 6fa:	14 c0       	rjmp	.+40     	; 0x724 <fputc+0x6e>
 6fc:	8b 01       	movw	r16, r22
 6fe:	ec 01       	movw	r28, r24
 700:	fb 01       	movw	r30, r22
 702:	00 84       	ldd	r0, Z+8	; 0x08
 704:	f1 85       	ldd	r31, Z+9	; 0x09
 706:	e0 2d       	mov	r30, r0
 708:	09 95       	icall
 70a:	89 2b       	or	r24, r25
 70c:	e1 f6       	brne	.-72     	; 0x6c6 <fputc+0x10>
 70e:	d8 01       	movw	r26, r16
 710:	16 96       	adiw	r26, 0x06	; 6
 712:	8d 91       	ld	r24, X+
 714:	9c 91       	ld	r25, X
 716:	17 97       	sbiw	r26, 0x07	; 7
 718:	01 96       	adiw	r24, 0x01	; 1
 71a:	17 96       	adiw	r26, 0x07	; 7
 71c:	9c 93       	st	X, r25
 71e:	8e 93       	st	-X, r24
 720:	16 97       	sbiw	r26, 0x06	; 6
 722:	ce 01       	movw	r24, r28
 724:	df 91       	pop	r29
 726:	cf 91       	pop	r28
 728:	1f 91       	pop	r17
 72a:	0f 91       	pop	r16
 72c:	08 95       	ret

0000072e <__ultoa_invert>:
 72e:	fa 01       	movw	r30, r20
 730:	aa 27       	eor	r26, r26
 732:	28 30       	cpi	r18, 0x08	; 8
 734:	51 f1       	breq	.+84     	; 0x78a <__ultoa_invert+0x5c>
 736:	20 31       	cpi	r18, 0x10	; 16
 738:	81 f1       	breq	.+96     	; 0x79a <__ultoa_invert+0x6c>
 73a:	e8 94       	clt
 73c:	6f 93       	push	r22
 73e:	6e 7f       	andi	r22, 0xFE	; 254
 740:	6e 5f       	subi	r22, 0xFE	; 254
 742:	7f 4f       	sbci	r23, 0xFF	; 255
 744:	8f 4f       	sbci	r24, 0xFF	; 255
 746:	9f 4f       	sbci	r25, 0xFF	; 255
 748:	af 4f       	sbci	r26, 0xFF	; 255
 74a:	b1 e0       	ldi	r27, 0x01	; 1
 74c:	3e d0       	rcall	.+124    	; 0x7ca <__ultoa_invert+0x9c>
 74e:	b4 e0       	ldi	r27, 0x04	; 4
 750:	3c d0       	rcall	.+120    	; 0x7ca <__ultoa_invert+0x9c>
 752:	67 0f       	add	r22, r23
 754:	78 1f       	adc	r23, r24
 756:	89 1f       	adc	r24, r25
 758:	9a 1f       	adc	r25, r26
 75a:	a1 1d       	adc	r26, r1
 75c:	68 0f       	add	r22, r24
 75e:	79 1f       	adc	r23, r25
 760:	8a 1f       	adc	r24, r26
 762:	91 1d       	adc	r25, r1
 764:	a1 1d       	adc	r26, r1
 766:	6a 0f       	add	r22, r26
 768:	71 1d       	adc	r23, r1
 76a:	81 1d       	adc	r24, r1
 76c:	91 1d       	adc	r25, r1
 76e:	a1 1d       	adc	r26, r1
 770:	20 d0       	rcall	.+64     	; 0x7b2 <__ultoa_invert+0x84>
 772:	09 f4       	brne	.+2      	; 0x776 <__ultoa_invert+0x48>
 774:	68 94       	set
 776:	3f 91       	pop	r19
 778:	2a e0       	ldi	r18, 0x0A	; 10
 77a:	26 9f       	mul	r18, r22
 77c:	11 24       	eor	r1, r1
 77e:	30 19       	sub	r19, r0
 780:	30 5d       	subi	r19, 0xD0	; 208
 782:	31 93       	st	Z+, r19
 784:	de f6       	brtc	.-74     	; 0x73c <__ultoa_invert+0xe>
 786:	cf 01       	movw	r24, r30
 788:	08 95       	ret
 78a:	46 2f       	mov	r20, r22
 78c:	47 70       	andi	r20, 0x07	; 7
 78e:	40 5d       	subi	r20, 0xD0	; 208
 790:	41 93       	st	Z+, r20
 792:	b3 e0       	ldi	r27, 0x03	; 3
 794:	0f d0       	rcall	.+30     	; 0x7b4 <__ultoa_invert+0x86>
 796:	c9 f7       	brne	.-14     	; 0x78a <__ultoa_invert+0x5c>
 798:	f6 cf       	rjmp	.-20     	; 0x786 <__ultoa_invert+0x58>
 79a:	46 2f       	mov	r20, r22
 79c:	4f 70       	andi	r20, 0x0F	; 15
 79e:	40 5d       	subi	r20, 0xD0	; 208
 7a0:	4a 33       	cpi	r20, 0x3A	; 58
 7a2:	18 f0       	brcs	.+6      	; 0x7aa <__ultoa_invert+0x7c>
 7a4:	49 5d       	subi	r20, 0xD9	; 217
 7a6:	31 fd       	sbrc	r19, 1
 7a8:	40 52       	subi	r20, 0x20	; 32
 7aa:	41 93       	st	Z+, r20
 7ac:	02 d0       	rcall	.+4      	; 0x7b2 <__ultoa_invert+0x84>
 7ae:	a9 f7       	brne	.-22     	; 0x79a <__ultoa_invert+0x6c>
 7b0:	ea cf       	rjmp	.-44     	; 0x786 <__ultoa_invert+0x58>
 7b2:	b4 e0       	ldi	r27, 0x04	; 4
 7b4:	a6 95       	lsr	r26
 7b6:	97 95       	ror	r25
 7b8:	87 95       	ror	r24
 7ba:	77 95       	ror	r23
 7bc:	67 95       	ror	r22
 7be:	ba 95       	dec	r27
 7c0:	c9 f7       	brne	.-14     	; 0x7b4 <__ultoa_invert+0x86>
 7c2:	00 97       	sbiw	r24, 0x00	; 0
 7c4:	61 05       	cpc	r22, r1
 7c6:	71 05       	cpc	r23, r1
 7c8:	08 95       	ret
 7ca:	9b 01       	movw	r18, r22
 7cc:	ac 01       	movw	r20, r24
 7ce:	0a 2e       	mov	r0, r26
 7d0:	06 94       	lsr	r0
 7d2:	57 95       	ror	r21
 7d4:	47 95       	ror	r20
 7d6:	37 95       	ror	r19
 7d8:	27 95       	ror	r18
 7da:	ba 95       	dec	r27
 7dc:	c9 f7       	brne	.-14     	; 0x7d0 <__ultoa_invert+0xa2>
 7de:	62 0f       	add	r22, r18
 7e0:	73 1f       	adc	r23, r19
 7e2:	84 1f       	adc	r24, r20
 7e4:	95 1f       	adc	r25, r21
 7e6:	a0 1d       	adc	r26, r0
 7e8:	08 95       	ret

000007ea <__prologue_saves__>:
 7ea:	2f 92       	push	r2
 7ec:	3f 92       	push	r3
 7ee:	4f 92       	push	r4
 7f0:	5f 92       	push	r5
 7f2:	6f 92       	push	r6
 7f4:	7f 92       	push	r7
 7f6:	8f 92       	push	r8
 7f8:	9f 92       	push	r9
 7fa:	af 92       	push	r10
 7fc:	bf 92       	push	r11
 7fe:	cf 92       	push	r12
 800:	df 92       	push	r13
 802:	ef 92       	push	r14
 804:	ff 92       	push	r15
 806:	0f 93       	push	r16
 808:	1f 93       	push	r17
 80a:	cf 93       	push	r28
 80c:	df 93       	push	r29
 80e:	cd b7       	in	r28, 0x3d	; 61
 810:	de b7       	in	r29, 0x3e	; 62
 812:	ca 1b       	sub	r28, r26
 814:	db 0b       	sbc	r29, r27
 816:	0f b6       	in	r0, 0x3f	; 63
 818:	f8 94       	cli
 81a:	de bf       	out	0x3e, r29	; 62
 81c:	0f be       	out	0x3f, r0	; 63
 81e:	cd bf       	out	0x3d, r28	; 61
 820:	09 94       	ijmp

00000822 <__epilogue_restores__>:
 822:	2a 88       	ldd	r2, Y+18	; 0x12
 824:	39 88       	ldd	r3, Y+17	; 0x11
 826:	48 88       	ldd	r4, Y+16	; 0x10
 828:	5f 84       	ldd	r5, Y+15	; 0x0f
 82a:	6e 84       	ldd	r6, Y+14	; 0x0e
 82c:	7d 84       	ldd	r7, Y+13	; 0x0d
 82e:	8c 84       	ldd	r8, Y+12	; 0x0c
 830:	9b 84       	ldd	r9, Y+11	; 0x0b
 832:	aa 84       	ldd	r10, Y+10	; 0x0a
 834:	b9 84       	ldd	r11, Y+9	; 0x09
 836:	c8 84       	ldd	r12, Y+8	; 0x08
 838:	df 80       	ldd	r13, Y+7	; 0x07
 83a:	ee 80       	ldd	r14, Y+6	; 0x06
 83c:	fd 80       	ldd	r15, Y+5	; 0x05
 83e:	0c 81       	ldd	r16, Y+4	; 0x04
 840:	1b 81       	ldd	r17, Y+3	; 0x03
 842:	aa 81       	ldd	r26, Y+2	; 0x02
 844:	b9 81       	ldd	r27, Y+1	; 0x01
 846:	ce 0f       	add	r28, r30
 848:	d1 1d       	adc	r29, r1
 84a:	0f b6       	in	r0, 0x3f	; 63
 84c:	f8 94       	cli
 84e:	de bf       	out	0x3e, r29	; 62
 850:	0f be       	out	0x3f, r0	; 63
 852:	cd bf       	out	0x3d, r28	; 61
 854:	ed 01       	movw	r28, r26
 856:	08 95       	ret

00000858 <_exit>:
 858:	f8 94       	cli

0000085a <__stop_program>:
 85a:	ff cf       	rjmp	.-2      	; 0x85a <__stop_program>
